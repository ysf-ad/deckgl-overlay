{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.ts"],"names":["WORLD_SIZE","defaultProps","GeoJsonLayer","data","urlType","onDataLoad","type","value","optional","compare","uniqueIdProperty","highlightedFeatureId","loaders","MVTWorkerLoader","binary","MVTLayer","context","viewport","resolution","undefined","props","setState","tileJSON","hoveredFeatureId","hoveredFeatureLayerName","Boolean","state","oldProps","changeFlags","dataChanged","_updateTileData","_setWGS84PropertyForTiles","highlightColor","Array","isArray","fetch","propName","layer","raiseError","tiles","opts","minZoom","maxZoom","Number","isFinite","minzoom","maxzoom","loadProps","index","signal","url","Promise","reject","loadOptions","getLoadOptions","mimeType","mvt","coordinates","tileIndex","gis","format","tile","x","y","z","worldScale","Math","pow","xScale","yScale","xOffset","yOffset","modelMatrix","Matrix4","scale","autoHighlight","coordinateOrigin","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","extensions","ClipExtension","subLayers","log","warn","info","hoveredFeature","object","newHoveredFeatureId","newHoveredFeatureLayerName","getFeatureUniqueId","getFeatureLayerName","params","isWGS84","sourceLayer","globalFeatureId","transformTileCoordsToWGS84","bbox","highlightedObjectIndex","getHighlightedObjectIndex","content","isHighlighted","isFeatureIdDefined","isFeatureIdPresent","featureIdToHighlight","findIndex","feature","isMatchingId","isMatchingLayer","maxObjects","deck","width","height","layerIds","id","pickObjects","maxFeatures","features","_pickObjects","featureCache","Set","renderedFeatures","f","featureId","push","has","add","tileset","selectedTiles","forEach","hasOwnProperty","Object","defineProperty","get","length","_contentWGS84","map","TileLayer","properties","layerName","geometry","wgs84Geom"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAWA;;AACA;;AAEA;;AACA;;AACA;;AAMA;;AACA;;AAEA;;AAGA;;;;;;;;;;;;;;;;AASA,IAAMA,UAAU,GAAG,GAAnB;;AAEA,IAAMC,YAAyC,mCAC1CC,qBAAaD,YAD6B;AAE7CE,EAAAA,IAAI,EAAEC,kBAFuC;AAG7CC,EAAAA,UAAU,EAAE;AAACC,IAAAA,IAAI,EAAE,UAAP;AAAmBC,IAAAA,KAAK,EAAE,IAA1B;AAAgCC,IAAAA,QAAQ,EAAE,IAA1C;AAAgDC,IAAAA,OAAO,EAAE;AAAzD,GAHiC;AAI7CC,EAAAA,gBAAgB,EAAE,EAJ2B;AAK7CC,EAAAA,oBAAoB,EAAE,IALuB;AAM7CC,EAAAA,OAAO,EAAE,CAACC,oBAAD,CANoC;AAO7CC,EAAAA,MAAM,EAAE;AAPqC,EAA/C;;IA4DqBC,Q;;;;;;;;;;;;;;;;;;;;;WAgBnB,2BAAwB;AACtB;AAEA,UAAMD,MAAM,GAAG,KAAKE,OAAL,CAAaC,QAAb,CAAsBC,UAAtB,KAAqCC,SAArC,GAAiD,KAAjD,GAAyD,KAAKC,KAAL,CAAWN,MAAnF;AACA,WAAKO,QAAL,CAAc;AACZP,QAAAA,MAAM,EAANA,MADY;AAEZX,QAAAA,IAAI,EAAE,IAFM;AAGZmB,QAAAA,QAAQ,EAAE,IAHE;AAIZC,QAAAA,gBAAgB,EAAE,IAJN;AAKZC,QAAAA,uBAAuB,EAAE;AALb,OAAd;AAOD;;;SAED,eAAwB;AAAA;;AACtB,aAAOC,OAAO,CAAC,qBAAKC,KAAL,4DAAYvB,IAAZ,4FAAD,CAAd;AACD;;;WAED,2BAA6E;AAAA;;AAAA,UAAhEiB,KAAgE,QAAhEA,KAAgE;AAAA,UAAzDO,QAAyD,QAAzDA,QAAyD;AAAA,UAA/CX,OAA+C,QAA/CA,OAA+C;AAAA,UAAtCY,WAAsC,QAAtCA,WAAsC;;AAC3E,UAAIA,WAAW,CAACC,WAAhB,EAA6B;AAE3B,aAAKC,eAAL;AACD;;AAED,0BAAI,KAAKJ,KAAT,yCAAI,aAAYvB,IAAhB,EAAsB;AACpB,8GAAkB;AAACiB,UAAAA,KAAK,EAALA,KAAD;AAAQO,UAAAA,QAAQ,EAARA,QAAR;AAAkBX,UAAAA,OAAO,EAAPA,OAAlB;AAA2BY,UAAAA,WAAW,EAAXA;AAA3B,SAAlB;;AACA,aAAKG,yBAAL;AACD;;AACD,UAAOC,cAAP,GAAyBZ,KAAzB,CAAOY,cAAP;;AACA,UAAIA,cAAc,KAAKL,QAAQ,CAACK,cAA5B,IAA8CC,KAAK,CAACC,OAAN,CAAcF,cAAd,CAAlD,EAAiF;AAC/E,aAAKX,QAAL,CAAc;AAACW,UAAAA,cAAc,EAAdA;AAAD,SAAd;AACD;AACF;;;;uFAGD;AAAA;;AAAA;AAAA;AAAA;AAAA;AACM7B,gBAAAA,IADN,GACa,KAAKiB,KAAL,CAAWjB,IADxB;AAEMmB,gBAAAA,QAFN,GAEkC,IAFlC;;AAAA,sBAIM,OAAOnB,IAAP,KAAgB,QAAhB,IAA4B,CAAC,8BAAcA,IAAd,CAJnC;AAAA;AAAA;AAAA;;AAAA,8BAKgC,KAAKiB,KALrC,EAKWf,UALX,eAKWA,UALX,EAKuB8B,KALvB,eAKuBA,KALvB;AAMI,qBAAKd,QAAL,CAAc;AAAClB,kBAAAA,IAAI,EAAE,IAAP;AAAamB,kBAAAA,QAAQ,EAAE;AAAvB,iBAAd;AANJ;AAAA;AAAA,uBAQuBa,KAAK,CAAChC,IAAD,EAAO;AAACiC,kBAAAA,QAAQ,EAAE,MAAX;AAAmBC,kBAAAA,KAAK,EAAE,IAA1B;AAAgCzB,kBAAAA,OAAO,EAAE;AAAzC,iBAAP,CAR5B;;AAAA;AAQMU,gBAAAA,QARN;AAAA;AAAA;;AAAA;AAAA;AAAA;AAUM,qBAAKgB,UAAL,cAAuB,kBAAvB;AACAnC,gBAAAA,IAAI,GAAG,IAAP;;AAXN;AAcI,oBAAIE,UAAJ,EAAgB;AACdA,kBAAAA,UAAU,CAACiB,QAAD,EAAW;AAACc,oBAAAA,QAAQ,EAAE,MAAX;AAAmBC,oBAAAA,KAAK,EAAE;AAA1B,mBAAX,CAAV;AACD;;AAhBL;AAAA;;AAAA;AAiBS,oBAAIlC,IAAI,IAAI,sBAAOA,IAAP,MAAgB,QAAxB,IAAoC,cAAcA,IAAtD,EAA4D;AACjEmB,kBAAAA,QAAQ,GAAGnB,IAAX;AACD;;AAnBH;AAqBE,oBAAImB,QAAJ,EAAc;AACZnB,kBAAAA,IAAI,GAAGmB,QAAQ,CAACiB,KAAhB;AACD;;AAED,qBAAKlB,QAAL,CAAc;AAAClB,kBAAAA,IAAI,EAAJA,IAAD;AAAOmB,kBAAAA,QAAQ,EAARA;AAAP,iBAAd;;AAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WA4BA,8BAAqC;AACnC,UAAMkB,IAAI,+GAAV;AACA,UAAMlB,QAAyB,GAAG,KAAKI,KAAL,CAAWJ,QAA7C;AACA,yBAA2B,KAAKF,KAAhC;AAAA,UAAOqB,OAAP,gBAAOA,OAAP;AAAA,UAAgBC,OAAhB,gBAAgBA,OAAhB;;AAEA,UAAIpB,QAAJ,EAAc;AACZ,YAAIqB,MAAM,CAACC,QAAP,CAAgBtB,QAAQ,CAACuB,OAAzB,KAAsCvB,QAAQ,CAACuB,OAAV,GAAgCJ,OAAzE,EAA6F;AAC3FD,UAAAA,IAAI,CAACC,OAAL,GAAenB,QAAQ,CAACuB,OAAxB;AACD;;AAED,YACEF,MAAM,CAACC,QAAP,CAAgBtB,QAAQ,CAACwB,OAAzB,MACC,CAACH,MAAM,CAACC,QAAP,CAAgBF,OAAhB,CAAD,IAA8BpB,QAAQ,CAACwB,OAAV,GAAgCJ,OAD9D,CADF,EAGE;AACAF,UAAAA,IAAI,CAACE,OAAL,GAAepB,QAAQ,CAACwB,OAAxB;AACD;AACF;;AACD,aAAON,IAAP;AACD;;;WAID,wBAA0C;AAAA;;AACxC,UAAI,kBAAC,KAAKd,KAAN,yCAAC,aAAYvB,IAAb,CAAJ,EAAuB,OAAO,IAAP;AACvB;AACD;;;WAED,qBAAY4C,SAAZ,EAA8D;AAAA;;AAC5D,yBAAuB,KAAKrB,KAA5B;AAAA,UAAOvB,IAAP,gBAAOA,IAAP;AAAA,UAAaW,MAAb,gBAAaA,MAAb;AACA,UAAOkC,KAAP,GAAwBD,SAAxB,CAAOC,KAAP;AAAA,UAAcC,MAAd,GAAwBF,SAAxB,CAAcE,MAAd;AAEA,UAAMC,GAAG,GAAG,mCAAmB/C,IAAnB,EAAyB4C,SAAzB,CAAZ;;AACA,UAAI,CAACG,GAAL,EAAU;AACR,eAAOC,OAAO,CAACC,MAAR,CAAe,aAAf,CAAP;AACD;;AACD,UAAIC,WAAW,GAAG,KAAKC,cAAL,EAAlB;AACA,UAAOnB,KAAP,GAAgB,KAAKf,KAArB,CAAOe,KAAP;AACAkB,MAAAA,WAAW,mCACNA,WADM;AAETE,QAAAA,QAAQ,EAAE,wBAFD;AAGTC,QAAAA,GAAG,kDACEH,WADF,iDACE,aAAaG,GADf;AAEDC,UAAAA,WAAW,EAAE,KAAKzC,OAAL,CAAaC,QAAb,CAAsBC,UAAtB,GAAmC,OAAnC,GAA6C,OAFzD;AAGDwC,UAAAA,SAAS,EAAEV;AAHV,UAHM;AAYTW,QAAAA,GAAG,EAAE7C,MAAM,GAAG;AAAC8C,UAAAA,MAAM,EAAE;AAAT,SAAH,GAAwB;AAZ1B,QAAX;AAcA,aAAOzB,KAAK,CAACe,GAAD,EAAM;AAACd,QAAAA,QAAQ,EAAE,MAAX;AAAmBC,QAAAA,KAAK,EAAE,IAA1B;AAAgCgB,QAAAA,WAAW,EAAXA,WAAhC;AAA6CJ,QAAAA,MAAM,EAANA;AAA7C,OAAN,CAAZ;AACD;;;WAED,yBACE7B,KADF,EAO6B;AAC3B,8BAAkBA,KAAK,CAACyC,IAAN,CAAWb,KAA7B;AAAA,UAAOc,CAAP,qBAAOA,CAAP;AAAA,UAAUC,CAAV,qBAAUA,CAAV;AAAA,UAAaC,CAAb,qBAAaA,CAAb;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,CAAZ,CAAnB;AAEA,UAAMI,MAAM,GAAGpE,UAAU,GAAGiE,UAA5B;AACA,UAAMI,MAAM,GAAG,CAACD,MAAhB;AAEA,UAAME,OAAO,GAAItE,UAAU,GAAG8D,CAAd,GAAmBG,UAAnC;AACA,UAAMM,OAAO,GAAGvE,UAAU,IAAI,IAAI+D,CAAC,GAAGE,UAAZ,CAA1B;AAEA,UAAMO,WAAW,GAAG,IAAIC,cAAJ,GAAcC,KAAd,CAAoB,CAACN,MAAD,EAASC,MAAT,EAAiB,CAAjB,CAApB,CAApB;AAEAjD,MAAAA,KAAK,CAACuD,aAAN,GAAsB,KAAtB;;AAEA,UAAI,CAAC,KAAK3D,OAAL,CAAaC,QAAb,CAAsBC,UAA3B,EAAuC;AACrCE,QAAAA,KAAK,CAACoD,WAAN,GAAoBA,WAApB;AACApD,QAAAA,KAAK,CAACwD,gBAAN,GAAyB,CAACN,OAAD,EAAUC,OAAV,EAAmB,CAAnB,CAAzB;AACAnD,QAAAA,KAAK,CAACyD,gBAAN,GAAyBC,wBAAkBC,SAA3C;AACA3D,QAAAA,KAAK,CAAC4D,UAAN,8CAAwB5D,KAAK,CAAC4D,UAAN,IAAoB,EAA5C,IAAiD,IAAIC,yBAAJ,EAAjD;AACD;;AAED,UAAMC,SAAS,6GAAyB9D,KAAzB,CAAf;;AAEA,UAAI,KAAKM,KAAL,CAAWZ,MAAX,IAAqB,EAAEoE,SAAS,YAAYhF,oBAAvB,CAAzB,EAA+D;AAC7DiF,kBAAIC,IAAJ,CAAS,mEAAT;AACD;;AAED,aAAOF,SAAP;AACD;;;WAED,8BAA+BG,IAA/B,EAAwD;AACtD,UAAO3E,gBAAP,GAA2B,KAAKU,KAAhC,CAAOV,gBAAP;AAEA,yBAAoD,KAAKgB,KAAzD;AAAA,UAAOH,gBAAP,gBAAOA,gBAAP;AAAA,UAAyBC,uBAAzB,gBAAyBA,uBAAzB;AACA,UAAM8D,cAAc,GAAGD,IAAI,CAACE,MAA5B;AACA,UAAIC,mBAA2C,GAAG,IAAlD;AACA,UAAIC,0BAAyC,GAAG,IAAhD;;AAEA,UAAIH,cAAJ,EAAoB;AAClBE,QAAAA,mBAAmB,GAAGE,kBAAkB,CAACJ,cAAD,EAAiB5E,gBAAjB,CAAxC;AACA+E,QAAAA,0BAA0B,GAAGE,mBAAmB,CAACL,cAAD,CAAhD;AACD;;AACD,UAAKtD,cAAL,GAAuB,KAAKZ,KAA5B,CAAKY,cAAL;;AACA,UAAI,OAAOA,cAAP,KAA0B,UAA9B,EAA0C;AACxCA,QAAAA,cAAc,GAAGA,cAAc,CAACqD,IAAD,CAA/B;AACD;;AAED,UACE9D,gBAAgB,KAAKiE,mBAArB,IACAhE,uBAAuB,KAAKiE,0BAF9B,EAGE;AACA,aAAKpE,QAAL,CAAc;AACZW,UAAAA,cAAc,EAAdA,cADY;AAEZT,UAAAA,gBAAgB,EAAEiE,mBAFN;AAGZhE,UAAAA,uBAAuB,EAAEiE;AAHb,SAAd;AAKD;AACF;;;WAED,wBAAeG,MAAf,EAA+D;AAC7D,UAAMP,IAAI,4GAAwBO,MAAxB,CAAV;AAEA,UAAMC,OAAO,GAAGpE,OAAO,CAAC,KAAKT,OAAL,CAAaC,QAAb,CAAsBC,UAAvB,CAAvB;;AAEA,UAAI,KAAKQ,KAAL,CAAWZ,MAAX,IAAqBuE,IAAI,CAACrC,KAAL,KAAe,CAAC,CAAzC,EAA4C;AAC1C,YAAO7C,IAAP,GAAeyF,MAAM,CAACE,WAAP,CAAoB1E,KAAnC,CAAOjB,IAAP;AACAkF,QAAAA,IAAI,CAACE,MAAL,GAAc,0BAAgBpF,IAAhB,EAAwC;AACpD4F,UAAAA,eAAe,EAAEV,IAAI,CAACrC;AAD8B,SAAxC,CAAd;AAGD;;AACD,UAAIqC,IAAI,CAACE,MAAL,IAAe,CAACM,OAApB,EAA6B;AAC3BR,QAAAA,IAAI,CAACE,MAAL,GAAcS,0BAA0B,CACtCX,IAAI,CAACE,MADiC,EAEtCF,IAAI,CAACxB,IAAL,CAAWoC,IAF2B,EAGtC,KAAKjF,OAAL,CAAaC,QAHyB,CAAxC;AAKD;;AAED,aAAOoE,IAAP;AACD;;;WAED,gCAAuBxB,IAAvB,EAA+E;AAC7E,aAAO;AACLqC,QAAAA,sBAAsB,EAAE,KAAKC,yBAAL,CAA+BtC,IAA/B,CADnB;AAEL7B,QAAAA,cAAc,EAAE,KAAKN,KAAL,CAAWM;AAFtB,OAAP;AAID;;;WAED,mCAAkC6B,IAAlC,EAA6E;AAC3E,yBAA4D,KAAKnC,KAAjE;AAAA,UAAOH,gBAAP,gBAAOA,gBAAP;AAAA,UAAyBC,uBAAzB,gBAAyBA,uBAAzB;AAAA,UAAkDV,MAAlD,gBAAkDA,MAAlD;AACA,yBAAiD,KAAKM,KAAtD;AAAA,UAAOV,gBAAP,gBAAOA,gBAAP;AAAA,UAAyBC,oBAAzB,gBAAyBA,oBAAzB;AACA,UAAMR,IAAI,GAAG0D,IAAI,CAACuC,OAAlB;AAEA,UAAMC,aAAa,GAAGC,kBAAkB,CAAC3F,oBAAD,CAAxC;AACA,UAAM4F,kBAAkB,GAAGD,kBAAkB,CAAC/E,gBAAD,CAAlB,IAAwC8E,aAAnE;;AAEA,UAAI,CAACE,kBAAL,EAAyB;AACvB,eAAO,CAAC,CAAR;AACD;;AAED,UAAMC,oBAAoB,GAAGH,aAAa,GAAG1F,oBAAH,GAA2BY,gBAArE;;AAGA,UAAIU,KAAK,CAACC,OAAN,CAAc/B,IAAd,CAAJ,EAAyB;AACvB,eAAOA,IAAI,CAACsG,SAAL,CAAe,UAAAC,OAAO,EAAI;AAC/B,cAAMC,YAAY,GAAGjB,kBAAkB,CAACgB,OAAD,EAAUhG,gBAAV,CAAlB,KAAkD8F,oBAAvE;AACA,cAAMI,eAAe,GACnBP,aAAa,IAAIV,mBAAmB,CAACe,OAAD,CAAnB,KAAiClF,uBADpD;AAEA,iBAAOmF,YAAY,IAAIC,eAAvB;AACD,SALM,CAAP;AAQD,OATD,MASO,IAAIzG,IAAI,IAAIW,MAAZ,EAAoB;AAEzB,eAAO,8BACLX,IADK,EAELO,gBAFK,EAGL8F,oBAHK,EAILH,aAAa,GAAG,EAAH,GAAQ7E,uBAJhB,CAAP;AAMD;;AAED,aAAO,CAAC,CAAR;AACD;;;WAED,sBAAqBqF,UAArB,EAA+D;AAC7D,0BAAyB,KAAK7F,OAA9B;AAAA,UAAO8F,IAAP,iBAAOA,IAAP;AAAA,UAAa7F,QAAb,iBAAaA,QAAb;AACA,UAAM8F,KAAK,GAAG9F,QAAQ,CAAC8F,KAAvB;AACA,UAAMC,MAAM,GAAG/F,QAAQ,CAAC+F,MAAxB;AACA,UAAMlD,CAAC,GAAG7C,QAAQ,CAAC6C,CAAnB;AACA,UAAMC,CAAC,GAAG9C,QAAQ,CAAC8C,CAAnB;AACA,UAAMkD,QAAQ,GAAG,CAAC,KAAKC,EAAN,CAAjB;AACA,aAAOJ,IAAI,CAAEK,WAAN,CAAkB;AAACrD,QAAAA,CAAC,EAADA,CAAD;AAAIC,QAAAA,CAAC,EAADA,CAAJ;AAAOgD,QAAAA,KAAK,EAALA,KAAP;AAAcC,QAAAA,MAAM,EAANA,MAAd;AAAsBC,QAAAA,QAAQ,EAARA,QAAtB;AAAgCJ,QAAAA,UAAU,EAAVA;AAAhC,OAAlB,CAAP;AACD;;;WAGD,+BAAkE;AAAA,UAA9CO,WAA8C,uEAAjB,IAAiB;;AAChE,UAAMC,QAAQ,GAAG,KAAKC,YAAL,CAAkBF,WAAlB,CAAjB;;AACA,UAAMG,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACA,UAAMC,gBAA2B,GAAG,EAApC;;AAHgE,iDAKhDJ,QALgD;AAAA;;AAAA;AAKhE,4DAA0B;AAAA,cAAfK,CAAe;AACxB,cAAMC,SAAS,GAAGjC,kBAAkB,CAACgC,CAAC,CAACnC,MAAH,EAAW,KAAKnE,KAAL,CAAWV,gBAAtB,CAApC;;AAEA,cAAIiH,SAAS,KAAKxG,SAAlB,EAA6B;AAE3BsG,YAAAA,gBAAgB,CAACG,IAAjB,CAAsBF,CAAC,CAACnC,MAAxB;AACD,WAHD,MAGO,IAAI,CAACgC,YAAY,CAACM,GAAb,CAAiBF,SAAjB,CAAL,EAAkC;AAEvCJ,YAAAA,YAAY,CAACO,GAAb,CAAiBH,SAAjB;AACAF,YAAAA,gBAAgB,CAACG,IAAjB,CAAsBF,CAAC,CAACnC,MAAxB;AACD;AACF;AAhB+D;AAAA;AAAA;AAAA;AAAA;;AAkBhE,aAAOkC,gBAAP;AACD;;;WAED,qCAA0C;AAAA;;AACxC,UAAMrF,QAAQ,GAAG,aAAjB;AACA,UAAM2F,OAAkB,GAAG,KAAKrG,KAAL,CAAWqG,OAAtC;AAGAA,MAAAA,OAAO,CAACC,aAAR,CAAsBC,OAAtB,CAA8B,UAACpE,IAAD,EAA4C;AACxE,YAAI,CAACA,IAAI,CAACqE,cAAL,CAAoB9F,QAApB,CAAL,EAAoC;AAElC+F,UAAAA,MAAM,CAACC,cAAP,CAAsBvE,IAAtB,EAA4BzB,QAA5B,EAAsC;AACpCiG,YAAAA,GAAG,EAAE,eAAM;AAET,kBAAI,CAACxE,IAAI,CAACuC,OAAV,EAAmB;AACjB,uBAAO,IAAP;AACD;;AAED,kBAAI,MAAI,CAAC1E,KAAL,CAAWZ,MAAX,IAAqBmB,KAAK,CAACC,OAAN,CAAc2B,IAAI,CAACuC,OAAnB,CAArB,IAAoD,CAACvC,IAAI,CAACuC,OAAL,CAAakC,MAAtE,EAA8E;AAG5E,uBAAO,EAAP;AACD;;AAED,kBAAOrC,IAAP,GAAepC,IAAf,CAAOoC,IAAP;;AACA,kBAAIpC,IAAI,CAAC0E,aAAL,KAAuBpH,SAAvB,IAAoC,iCAAiB8E,IAAjB,CAAxC,EAAgE;AAG9D,oBAAMG,OAAO,GAAG,MAAI,CAAC1E,KAAL,CAAWZ,MAAX,GAAoB,0BAAgB+C,IAAI,CAACuC,OAArB,CAApB,GAAoDvC,IAAI,CAACuC,OAAzE;AACAvC,gBAAAA,IAAI,CAAC0E,aAAL,GAAqBnC,OAAO,CAACoC,GAAR,CAAY,UAAA9B,OAAO;AAAA,yBACtCV,0BAA0B,CAACU,OAAD,EAAUT,IAAV,EAAgB,MAAI,CAACjF,OAAL,CAAaC,QAA7B,CADY;AAAA,iBAAnB,CAArB;AAGD;;AACD,qBAAO4C,IAAI,CAAC0E,aAAZ;AACD;AAvBmC,WAAtC;AAyBD;AACF,OA7BD;AA8BD;;;EA3U+DE,kB;;;8BAA7C1H,Q,eAIA,U;8BAJAA,Q,kBAKGd,Y;;AAyUxB,SAASyF,kBAAT,CAA4BgB,OAA5B,EAA8ChG,gBAA9C,EAAoF;AAClF,MAAIgG,OAAO,CAACgC,UAAR,IAAsBhI,gBAA1B,EAA4C;AAC1C,WAAOgG,OAAO,CAACgC,UAAR,CAAmBhI,gBAAnB,CAAP;AACD;;AAED,MAAI,QAAQgG,OAAZ,EAAqB;AACnB,WAAOA,OAAO,CAACQ,EAAf;AACD;;AAED,SAAO/F,SAAP;AACD;;AAED,SAASwE,mBAAT,CAA6Be,OAA7B,EAA8D;AAAA;;AAC5D,SAAO,wBAAAA,OAAO,CAACgC,UAAR,4EAAoBC,SAApB,KAAiC,IAAxC;AACD;;AAED,SAASrC,kBAAT,CAA4B/F,KAA5B,EAAqD;AACnD,SAAOA,KAAK,KAAKY,SAAV,IAAuBZ,KAAK,KAAK,IAAjC,IAAyCA,KAAK,KAAK,EAA1D;AACD;;AAED,SAASyF,0BAAT,CACET,MADF,EAEEU,IAFF,EAGEhF,QAHF,EAIW;AACT,MAAMyF,OAAO,mCACRnB,MADQ;AAEXqD,IAAAA,QAAQ,EAAE;AACRtI,MAAAA,IAAI,EAAEiF,MAAM,CAACqD,QAAP,CAAgBtI;AADd;AAFC,IAAb;;AAQA6H,EAAAA,MAAM,CAACC,cAAP,CAAsB1B,OAAO,CAACkC,QAA9B,EAAwC,aAAxC,EAAuD;AACrDP,IAAAA,GAAG,EAAE,eAAM;AACT,UAAMQ,SAAS,GAAG,oCAAUtD,MAAM,CAACqD,QAAjB,EAA2B3C,IAA3B,EAAiChF,QAAjC,CAAlB;AACA,aAAO4H,SAAS,CAACpF,WAAjB;AACD;AAJoD,GAAvD;AAOA,SAAOiD,OAAP;AACD","sourcesContent":["import {\n  Layer,\n  LayersList,\n  log,\n  PickingInfo,\n  UpdateParameters,\n  GetPickingInfoParams,\n  Viewport,\n  COORDINATE_SYSTEM,\n  DefaultProps\n} from '@deck.gl/core';\nimport {GeoJsonLayer, GeoJsonLayerProps} from '@deck.gl/layers';\nimport {ClipExtension} from '@deck.gl/extensions';\n\nimport {Matrix4} from '@math.gl/core';\nimport {MVTWorkerLoader} from '@loaders.gl/mvt';\nimport {binaryToGeojson} from '@loaders.gl/gis';\n\nimport type {Loader} from '@loaders.gl/loader-utils';\nimport type {BinaryFeatures} from '@loaders.gl/schema';\nimport type {Feature} from 'geojson';\n\nimport {transform} from './coordinate-transform';\nimport findIndexBinary from './find-index-binary';\n\nimport TileLayer, {TiledPickingInfo, TileLayerProps} from '../tile-layer/tile-layer';\n\nimport type {Tileset2DProps, TileLoadProps, GeoBoundingBox, URLTemplate} from '../tileset-2d';\nimport {\n  urlType,\n  Tileset2D,\n  Tile2DHeader,\n  getURLFromTemplate,\n  isGeoBoundingBox,\n  isURLTemplate\n} from '../tileset-2d';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps: DefaultProps<MVTLayerProps> = {\n  ...GeoJsonLayer.defaultProps,\n  data: urlType,\n  onDataLoad: {type: 'function', value: null, optional: true, compare: false},\n  uniqueIdProperty: '',\n  highlightedFeatureId: null,\n  loaders: [MVTWorkerLoader],\n  binary: true\n};\n\nexport type TileJson = {\n  tilejson: string;\n  tiles: string[];\n  // eslint-disable-next-line camelcase\n  vector_layers: any[];\n  attribution?: string;\n  scheme?: string;\n  maxzoom?: number;\n  minzoom?: number;\n  version?: string;\n};\n\ntype ParsedMvtTile = Feature[] | BinaryFeatures;\n\n/** All props supported by the MVTLayer */\nexport type MVTLayerProps = _MVTLayerProps &\n  Omit<GeoJsonLayerProps, 'data'> &\n  Omit<TileLayerProps<ParsedMvtTile>, 'data'>;\n\n/** Props added by the MVTLayer  */\nexport type _MVTLayerProps = {\n  data: TileJson | URLTemplate;\n\n  /** Called if `data` is a TileJSON URL when it is successfully fetched. */\n  onDataLoad?: ((tilejson: TileJson | null) => void) | null;\n\n  /** Needed for highlighting a feature split across two or more tiles. */\n  uniqueIdProperty?: string;\n\n  /** A feature with ID corresponding to the supplied value will be highlighted. */\n  highlightedFeatureId?: string | number | null;\n\n  /**\n   * Use tile data in binary format.\n   *\n   * @default true\n   */\n  binary?: boolean;\n\n  /**\n   * Loaders used to transform tiles into `data` property passed to `renderSubLayers`.\n   *\n   * @default [MVTWorkerLoader] from `@loaders.gl/mvt`\n   */\n  loaders?: Loader[];\n};\n\ntype ContentWGS84Cache = {_contentWGS84?: Feature[]};\n\n/** Render data formatted as [Mapbox Vector Tiles](https://docs.mapbox.com/vector-tiles/specification/). */\nexport default class MVTLayer<ExtraProps extends {} = {}> extends TileLayer<\n  ParsedMvtTile,\n  Required<_MVTLayerProps> & ExtraProps\n> {\n  static layerName = 'MVTLayer';\n  static defaultProps = defaultProps;\n\n  state!: TileLayer<ParsedMvtTile>['state'] & {\n    binary: boolean;\n    data: URLTemplate;\n    tileJSON: TileJson | null;\n    highlightColor?: number[];\n    hoveredFeatureId: number | string | null;\n    hoveredFeatureLayerName: string | null;\n  };\n\n  initializeState(): void {\n    super.initializeState();\n    // GlobeView doesn't work well with binary data\n    const binary = this.context.viewport.resolution !== undefined ? false : this.props.binary;\n    this.setState({\n      binary,\n      data: null,\n      tileJSON: null,\n      hoveredFeatureId: null,\n      hoveredFeatureLayerName: null\n    });\n  }\n\n  get isLoaded(): boolean {\n    return Boolean(this.state?.data && super.isLoaded);\n  }\n\n  updateState({props, oldProps, context, changeFlags}: UpdateParameters<this>) {\n    if (changeFlags.dataChanged) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._updateTileData();\n    }\n\n    if (this.state?.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      this._setWGS84PropertyForTiles();\n    }\n    const {highlightColor} = props;\n    if (highlightColor !== oldProps.highlightColor && Array.isArray(highlightColor)) {\n      this.setState({highlightColor});\n    }\n  }\n\n  /* eslint-disable complexity */\n  private async _updateTileData(): Promise<void> {\n    let data = this.props.data;\n    let tileJSON: TileJson | null = null;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      const {onDataLoad, fetch} = this.props;\n      this.setState({data: null, tileJSON: null});\n      try {\n        tileJSON = await fetch(data, {propName: 'data', layer: this, loaders: []});\n      } catch (error: any) {\n        this.raiseError(error, 'loading TileJSON');\n        data = null;\n      }\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON, {propName: 'data', layer: this});\n      }\n    } else if (data && typeof data === 'object' && 'tilejson' in data) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n    }\n\n    this.setState({data, tileJSON});\n  }\n\n  _getTilesetOptions(): Tileset2DProps {\n    const opts = super._getTilesetOptions();\n    const tileJSON: TileJson | null = this.state.tileJSON;\n    const {minZoom, maxZoom} = this.props;\n\n    if (tileJSON) {\n      if (Number.isFinite(tileJSON.minzoom) && (tileJSON.minzoom as number) > (minZoom as number)) {\n        opts.minZoom = tileJSON.minzoom as number;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(maxZoom) || (tileJSON.maxzoom as number) < (maxZoom as number))\n      ) {\n        opts.maxZoom = tileJSON.maxzoom as number;\n      }\n    }\n    return opts;\n  }\n\n  /* eslint-disable complexity */\n\n  renderLayers(): Layer | null | LayersList {\n    if (!this.state?.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(loadProps: TileLoadProps): Promise<ParsedMvtTile> {\n    const {data, binary} = this.state;\n    const {index, signal} = loadProps;\n\n    const url = getURLFromTemplate(data, loadProps);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let loadOptions = this.getLoadOptions();\n    const {fetch} = this.props;\n    loadOptions = {\n      ...loadOptions,\n      mimeType: 'application/x-protobuf',\n      mvt: {\n        ...loadOptions?.mvt,\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: index\n        // Local worker debug\n        // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n        // Set worker to null to skip web workers\n        // workerUrl: null\n      },\n      gis: binary ? {format: 'binary'} : {}\n    };\n    return fetch(url, {propName: 'data', layer: this, loadOptions, signal});\n  }\n\n  renderSubLayers(\n    props: TileLayer['props'] & {\n      id: string;\n      data: ParsedMvtTile;\n      _offset: number;\n      tile: Tile2DHeader<ParsedMvtTile>;\n    }\n  ): Layer | null | LayersList {\n    const {x, y, z} = props.tile.index;\n    const worldScale = Math.pow(2, z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    const subLayers = super.renderSubLayers(props);\n\n    if (this.state.binary && !(subLayers instanceof GeoJsonLayer)) {\n      log.warn('renderSubLayers() must return GeoJsonLayer when using binary:true')();\n    }\n\n    return subLayers;\n  }\n\n  protected _updateAutoHighlight(info: PickingInfo): void {\n    const {uniqueIdProperty} = this.props;\n\n    const {hoveredFeatureId, hoveredFeatureLayerName} = this.state;\n    const hoveredFeature = info.object;\n    let newHoveredFeatureId: string | number | null = null;\n    let newHoveredFeatureLayerName: string | null = null;\n\n    if (hoveredFeature) {\n      newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      newHoveredFeatureLayerName = getFeatureLayerName(hoveredFeature);\n    }\n    let {highlightColor} = this.props;\n    if (typeof highlightColor === 'function') {\n      highlightColor = highlightColor(info);\n    }\n\n    if (\n      hoveredFeatureId !== newHoveredFeatureId ||\n      hoveredFeatureLayerName !== newHoveredFeatureLayerName\n    ) {\n      this.setState({\n        highlightColor,\n        hoveredFeatureId: newHoveredFeatureId,\n        hoveredFeatureLayerName: newHoveredFeatureLayerName\n      });\n    }\n  }\n\n  getPickingInfo(params: GetPickingInfoParams): TiledPickingInfo {\n    const info = super.getPickingInfo(params);\n\n    const isWGS84 = Boolean(this.context.viewport.resolution);\n\n    if (this.state.binary && info.index !== -1) {\n      const {data} = params.sourceLayer!.props;\n      info.object = binaryToGeojson(data as BinaryFeatures, {\n        globalFeatureId: info.index\n      }) as Feature;\n    }\n    if (info.object && !isWGS84) {\n      info.object = transformTileCoordsToWGS84(\n        info.object,\n        info.tile!.bbox as GeoBoundingBox, // eslint-disable-line\n        this.context.viewport\n      );\n    }\n\n    return info;\n  }\n\n  getSubLayerPropsByTile(tile: Tile2DHeader<ParsedMvtTile>): Record<string, any> {\n    return {\n      highlightedObjectIndex: this.getHighlightedObjectIndex(tile),\n      highlightColor: this.state.highlightColor\n    };\n  }\n\n  private getHighlightedObjectIndex(tile: Tile2DHeader<ParsedMvtTile>): number {\n    const {hoveredFeatureId, hoveredFeatureLayerName, binary} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId} = this.props;\n    const data = tile.content;\n\n    const isHighlighted = isFeatureIdDefined(highlightedFeatureId);\n    const isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId) || isHighlighted;\n\n    if (!isFeatureIdPresent) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isHighlighted ? highlightedFeatureId! : hoveredFeatureId!;\n\n    // Iterable data\n    if (Array.isArray(data)) {\n      return data.findIndex(feature => {\n        const isMatchingId = getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight;\n        const isMatchingLayer =\n          isHighlighted || getFeatureLayerName(feature) === hoveredFeatureLayerName;\n        return isMatchingId && isMatchingLayer;\n      });\n\n      // Non-iterable data\n    } else if (data && binary) {\n      // Get the feature index of the selected item to highlight\n      return findIndexBinary(\n        data,\n        uniqueIdProperty,\n        featureIdToHighlight,\n        isHighlighted ? '' : hoveredFeatureLayerName\n      );\n    }\n\n    return -1;\n  }\n\n  private _pickObjects(maxObjects: number | null): PickingInfo[] {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck!.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  /** Get the rendered features in the current viewport. */\n  getRenderedFeatures(maxFeatures: number | null = null): Feature[] {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures: Feature[] = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === undefined) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object as Feature);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object as Feature);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  private _setWGS84PropertyForTiles(): void {\n    const propName = 'dataInWGS84';\n    const tileset: Tileset2D = this.state.tileset!;\n\n    // @ts-expect-error selectedTiles are always initialized when tile is being processed\n    tileset.selectedTiles.forEach((tile: Tile2DHeader & ContentWGS84Cache) => {\n      if (!tile.hasOwnProperty(propName)) {\n        // eslint-disable-next-line accessor-pairs\n        Object.defineProperty(tile, propName, {\n          get: () => {\n            // Still loading or encountered an error\n            if (!tile.content) {\n              return null;\n            }\n\n            if (this.state.binary && Array.isArray(tile.content) && !tile.content.length) {\n              // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n              // https://github.com/visgl/loaders.gl/pull/1137\n              return [];\n            }\n\n            const {bbox} = tile;\n            if (tile._contentWGS84 === undefined && isGeoBoundingBox(bbox)) {\n              // Create a cache to transform only once\n\n              const content = this.state.binary ? binaryToGeojson(tile.content) : tile.content;\n              tile._contentWGS84 = content.map(feature =>\n                transformTileCoordsToWGS84(feature, bbox, this.context.viewport)\n              );\n            }\n            return tile._contentWGS84;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction getFeatureUniqueId(feature: Feature, uniqueIdProperty: string | undefined) {\n  if (feature.properties && uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return undefined;\n}\n\nfunction getFeatureLayerName(feature: Feature): string | null {\n  return feature.properties?.layerName || null;\n}\n\nfunction isFeatureIdDefined(value: unknown): boolean {\n  return value !== undefined && value !== null && value !== '';\n}\n\nfunction transformTileCoordsToWGS84(\n  object: Feature,\n  bbox: GeoBoundingBox,\n  viewport: Viewport\n): Feature {\n  const feature = {\n    ...object,\n    geometry: {\n      type: object.geometry.type\n    }\n  };\n\n  // eslint-disable-next-line accessor-pairs\n  Object.defineProperty(feature.geometry, 'coordinates', {\n    get: () => {\n      const wgs84Geom = transform(object.geometry, bbox, viewport);\n      return wgs84Geom.coordinates;\n    }\n  });\n\n  return feature as Feature;\n}\n"],"file":"mvt-layer.js"}