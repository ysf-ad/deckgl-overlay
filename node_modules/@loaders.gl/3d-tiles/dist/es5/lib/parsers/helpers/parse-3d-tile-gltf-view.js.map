{"version":3,"file":"parse-3d-tile-gltf-view.js","names":["_gltf","require","_loaderUtils","GLTF_FORMAT","URI","EMBEDDED","exports","parse3DTileGLTFViewSync","tile","arrayBuffer","byteOffset","options","rotateYtoZ","gltfByteLength","byteLength","Error","gltfUpAxis","assetGltfUpAxis","gltfArrayBuffer","sliceArrayBuffer","gltfByteOffset","console","warn","concat","type","extractGLTF","gltfFormat","context","tile3DOptions","extractGLTFBufferOrURL","loadGLTF","parse","fetch","gltfUrl","gltf","GLTFLoader","gpuMemoryUsageInBytes","_getMemoryUsageGLTF","gltfUrlBytes","Uint8Array","textDecoder","TextDecoder","decode","replace"],"sources":["../../../../../src/lib/parsers/helpers/parse-3d-tile-gltf-view.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\n// TODO - should we automatically parse the embedded glTF or leave it to the app?\n// - I.e. some apps might work directly on a GLB, in that case no need for us to decode...\n// - And if we decode, do we still keep the GLB in case it is needed?\n// - Do we add an option to control this?\n// - Also, should we have hard dependency on gltf module or use injection or auto-discovery for gltf parser?\n\nimport {_getMemoryUsageGLTF, GLTFLoader} from '@loaders.gl/gltf';\nimport {sliceArrayBuffer} from '@loaders.gl/loader-utils';\n\nexport const GLTF_FORMAT = {\n  URI: 0,\n  EMBEDDED: 1\n};\n\nexport function parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n\n  // Assume glTF consumes rest of tile\n  const gltfByteLength = tile.byteOffset + tile.byteLength - byteOffset;\n  if (gltfByteLength === 0) {\n    throw new Error('glTF byte length must be greater than 0.');\n  }\n\n  // Save gltf up axis\n  tile.gltfUpAxis =\n    options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n      ? options['3d-tiles'].assetGltfUpAxis\n      : 'Y';\n\n  // TODO - We can avoid copy if already 4-byte aligned...\n  // However the rest of the code may not be able to accept byteOffsets, so copy anyway\n  tile.gltfArrayBuffer = sliceArrayBuffer(arrayBuffer, byteOffset, gltfByteLength);\n  tile.gltfByteOffset = 0;\n  tile.gltfByteLength = gltfByteLength;\n\n  if (byteOffset % 4 === 0) {\n    // tile.gltfArrayBuffer = arrayBuffer;\n    // tile.gltfByteOffset = byteOffset;\n    // tile.gltfByteLength = gltfByteLength;\n  } else {\n    // Create a copy of the glb so that it is 4-byte aligned\n    // eslint-disable-next-line\n    console.warn(`${tile.type}: embedded glb is not aligned to a 4-byte boundary.`);\n  }\n\n  // Entire tile is consumed\n  return tile.byteOffset + tile.byteLength;\n}\n\nexport async function extractGLTF(tile, gltfFormat, options, context) {\n  const tile3DOptions = options['3d-tiles'] || {};\n\n  extractGLTFBufferOrURL(tile, gltfFormat, options);\n\n  if (tile3DOptions.loadGLTF) {\n    const {parse, fetch} = context;\n    if (tile.gltfUrl) {\n      tile.gltfArrayBuffer = await fetch(tile.gltfUrl, options);\n      tile.gltfByteOffset = 0;\n    }\n    if (tile.gltfArrayBuffer) {\n      // TODO - Should handle byteOffset... However, not used now...\n      tile.gltf = await parse(tile.gltfArrayBuffer, GLTFLoader, options, context);\n      tile.gpuMemoryUsageInBytes = _getMemoryUsageGLTF(tile.gltf);\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n    }\n  }\n}\n\nfunction extractGLTFBufferOrURL(tile, gltfFormat, options) {\n  switch (gltfFormat) {\n    case GLTF_FORMAT.URI:\n      // We need to remove padding from the end of the model URL in case this tile was part of a composite tile.\n      // This removes all white space and null characters from the end of the string.\n      const gltfUrlBytes = new Uint8Array(tile.gltfArrayBuffer, tile.gltfByteOffset);\n      const textDecoder = new TextDecoder();\n      const gltfUrl = textDecoder.decode(gltfUrlBytes);\n      tile.gltfUrl = gltfUrl.replace(/[\\s\\0]+$/, '');\n      delete tile.gltfArrayBuffer;\n      delete tile.gltfByteOffset;\n      delete tile.gltfByteLength;\n      break;\n    case GLTF_FORMAT.EMBEDDED:\n      break;\n    default:\n      throw new Error('b3dm: Illegal glTF format field');\n  }\n}\n"],"mappings":"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"}