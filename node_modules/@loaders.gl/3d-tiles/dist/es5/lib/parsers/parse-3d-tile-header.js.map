{"version":3,"file":"parse-3d-tile-header.js","names":["_tile3dSubtreeLoader","require","_core","_tiles","_parse3dImplicitTiles","_s2CornersToObb","getTileType","tile","contentUrl","TILE_TYPE","EMPTY","split","fileExtension","pop","POINTCLOUD","SCENEGRAPH","getRefine","refine","TILE_REFINEMENT","REPLACE","ADD","resolveUri","uri","basePath","urlSchemeRegex","test","url","URL","concat","decodeURI","toString","startsWith","normalizeTileData","options","content","contentUri","id","lodMetricType","LOD_METRIC_TYPE","GEOMETRIC_ERROR","lodMetricValue","geometricError","transformMatrix","transform","type","normalizeTileHeaders","tileset","root","rootImplicitTilingExtension","getImplicitTilingExtensionData","normalizeImplicitTileHeaders","stack","push","length","children","childHeader","childImplicitTilingExtension","implicitTilingExtension","_tileset$root","_tile$boundingVolume$","subdivisionScheme","maximumLevel","subtreeLevels","subtrees","subtreesUriTemplate","replacedUrlTemplate","replaceContentUrlTemplate","subtreeUrl","subtree","load","Tile3DSubtreeLoader","contentUrlTemplate","rootLodMetricValue","s2VolumeInfo","boundingVolume","extensions","box","convertS2BoundingVolumetoOBB","s2VolumeBox","rootBoundingVolume","implicitOptions","normalizeImplicitTileData","rootSubtree","parseImplicitTiles","replace","_tile$extensions","implicitTiling"],"sources":["../../../../src/lib/parsers/parse-3d-tile-header.ts"],"sourcesContent":["import type {LoaderOptions} from '@loaders.gl/loader-utils';\nimport {Tile3DSubtreeLoader} from '../../tile-3d-subtree-loader';\nimport {load} from '@loaders.gl/core';\nimport {Tileset3D, LOD_METRIC_TYPE, TILE_REFINEMENT, TILE_TYPE, Tile3D} from '@loaders.gl/tiles';\nimport {ImplicitTilingExtension, Subtree} from '../../types';\nimport type {S2VolumeBox} from './helpers/parse-3d-implicit-tiles';\nimport {parseImplicitTiles, replaceContentUrlTemplate} from './helpers/parse-3d-implicit-tiles';\nimport type {S2VolumeInfo} from '../utils/obb/s2-corners-to-obb';\nimport {convertS2BoundingVolumetoOBB} from '../utils/obb/s2-corners-to-obb';\n\nfunction getTileType(tile) {\n  if (!tile.contentUrl) {\n    return TILE_TYPE.EMPTY;\n  }\n\n  const contentUrl = tile.contentUrl.split('?')[0]; // Discard query string\n  const fileExtension = contentUrl.split('.').pop();\n  switch (fileExtension) {\n    case 'pnts':\n      return TILE_TYPE.POINTCLOUD;\n    case 'i3dm':\n    case 'b3dm':\n    case 'glb':\n    case 'gltf':\n      return TILE_TYPE.SCENEGRAPH;\n    default:\n      return fileExtension;\n  }\n}\n\nfunction getRefine(refine) {\n  switch (refine) {\n    case 'REPLACE':\n    case 'replace':\n      return TILE_REFINEMENT.REPLACE;\n    case 'ADD':\n    case 'add':\n      return TILE_REFINEMENT.ADD;\n    default:\n      return refine;\n  }\n}\n\nfunction resolveUri(uri, basePath) {\n  // url scheme per RFC3986\n  const urlSchemeRegex = /^[a-z][0-9a-z+.-]*:/i;\n\n  if (urlSchemeRegex.test(basePath)) {\n    const url = new URL(uri, `${basePath}/`);\n    return decodeURI(url.toString());\n  } else if (uri.startsWith('/')) {\n    return uri;\n  }\n\n  return `${basePath}/${uri}`;\n}\n\nexport function normalizeTileData(tile, options) {\n  if (!tile) {\n    return null;\n  }\n  if (tile.content) {\n    const contentUri = tile.content.uri || tile.content.url;\n    tile.contentUrl = resolveUri(contentUri, options.basePath);\n  }\n  tile.id = tile.contentUrl;\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n  tile.type = getTileType(tile);\n  tile.refine = getRefine(tile.refine);\n\n  return tile;\n}\n\n// normalize tile headers\nexport async function normalizeTileHeaders(\n  tileset: Tileset3D,\n  options: LoaderOptions\n): Promise<Tileset3D> {\n  const basePath = tileset.basePath;\n  let root: Tileset3D;\n\n  const rootImplicitTilingExtension = getImplicitTilingExtensionData(tileset?.root);\n  if (rootImplicitTilingExtension && tileset.root) {\n    root = await normalizeImplicitTileHeaders(\n      tileset.root,\n      tileset,\n      rootImplicitTilingExtension,\n      options\n    );\n  } else {\n    root = normalizeTileData(tileset.root, tileset);\n  }\n\n  const stack: any[] = [];\n  stack.push(root);\n\n  while (stack.length > 0) {\n    const tile = stack.pop() || {};\n    const children = tile.children || [];\n    for (let childHeader of children) {\n      const childImplicitTilingExtension = getImplicitTilingExtensionData(childHeader);\n      if (childImplicitTilingExtension) {\n        childHeader = await normalizeImplicitTileHeaders(\n          childHeader,\n          tileset,\n          childImplicitTilingExtension,\n          options\n        );\n      } else {\n        normalizeTileData(childHeader, {basePath});\n      }\n\n      stack.push(childHeader);\n    }\n  }\n\n  return root;\n}\n\n/**\n * Do normalisation of implicit tile headers\n * TODO Check if Tile3D class can be a return type here.\n * @param tileset\n */\nexport async function normalizeImplicitTileHeaders(\n  tile: Tile3D,\n  tileset: Tileset3D,\n  implicitTilingExtension: ImplicitTilingExtension,\n  options: LoaderOptions\n) {\n  const basePath = tileset.basePath;\n  const {\n    subdivisionScheme,\n    maximumLevel,\n    subtreeLevels,\n    subtrees: {uri: subtreesUriTemplate}\n  } = implicitTilingExtension;\n  const replacedUrlTemplate = replaceContentUrlTemplate(subtreesUriTemplate, 0, 0, 0, 0);\n  const subtreeUrl = resolveUri(replacedUrlTemplate, basePath);\n  const subtree = await load(subtreeUrl, Tile3DSubtreeLoader, options);\n  const contentUrlTemplate = resolveUri(tile.content.uri, basePath);\n  const refine = tileset?.root?.refine;\n  // @ts-ignore\n  const rootLodMetricValue = tile.geometricError;\n\n  // Replace tile.boundingVolume with the the bounding volume specified by the extensions['3DTILES_bounding_volume_S2']\n  const s2VolumeInfo: S2VolumeInfo = tile.boundingVolume.extensions?.['3DTILES_bounding_volume_S2'];\n  if (s2VolumeInfo) {\n    const box = convertS2BoundingVolumetoOBB(s2VolumeInfo);\n    const s2VolumeBox: S2VolumeBox = {box, s2VolumeInfo};\n    tile.boundingVolume = s2VolumeBox;\n  }\n\n  const rootBoundingVolume = tile.boundingVolume;\n\n  const implicitOptions = {\n    contentUrlTemplate,\n    subtreesUriTemplate,\n    subdivisionScheme,\n    subtreeLevels,\n    maximumLevel,\n    refine,\n    basePath,\n    lodMetricType: LOD_METRIC_TYPE.GEOMETRIC_ERROR,\n    rootLodMetricValue,\n    rootBoundingVolume,\n    getTileType,\n    getRefine\n  };\n\n  return await normalizeImplicitTileData(tile, subtree, implicitOptions);\n}\n\n/**\n * Do implicit data normalisation to create hierarchical tile structure\n * @param tile\n * @param rootSubtree\n * @param options\n * @returns\n */\nexport async function normalizeImplicitTileData(tile, rootSubtree: Subtree, options: any) {\n  if (!tile) {\n    return null;\n  }\n\n  tile.lodMetricType = LOD_METRIC_TYPE.GEOMETRIC_ERROR;\n  tile.lodMetricValue = tile.geometricError;\n  tile.transformMatrix = tile.transform;\n\n  const {children, contentUrl} = await parseImplicitTiles({\n    subtree: rootSubtree,\n    options,\n    s2VolumeBox: tile\n  });\n\n  if (contentUrl) {\n    tile.contentUrl = contentUrl;\n    tile.content = {uri: contentUrl.replace(`${options.basePath}/`, '')};\n  }\n\n  tile.refine = getRefine(tile.refine);\n  tile.type = getTileType(tile);\n  tile.children = children;\n  tile.id = tile.contentUrl;\n\n  return tile;\n}\n\n/**\n * Implicit Tiling data can be in 3DTILES_implicit_tiling for 3DTiles v.Next or directly in implicitTiling object for 3DTiles v1.1.\n * Spec 3DTiles v.Next - https://github.com/CesiumGS/3d-tiles/tree/main/extensions/3DTILES_implicit_tiling\n * Spec 3DTiles v.1.1 - https://github.com/CesiumGS/3d-tiles/tree/draft-1.1/specification/ImplicitTiling\n * @param tile\n * @returns\n */\nfunction getImplicitTilingExtensionData(tile: Tile3D | null): ImplicitTilingExtension {\n  return tile?.extensions?.['3DTILES_implicit_tiling'] || tile?.implicitTiling;\n}\n"],"mappings":"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"}