{"version":3,"file":"parse-3d-tile-batched-model.js","names":["_math","require","_tile3dFeatureTable","_interopRequireDefault","_parse3dTileHeader","_parse3dTileTables","_parse3dTileGltfView","parseBatchedModel3DTile","tile","arrayBuffer","byteOffset","options","context","_tile$gltf","parseBatchedModel","extractGLTF","GLTF_FORMAT","EMBEDDED","extensions","gltf","CESIUM_RTC","rtcCenter","center","parse3DTileHeaderSync","parse3DTileTablesHeaderSync","parse3DTileTablesSync","parse3DTileGLTFViewSync","featureTable","Tile3DFeatureTable","featureTableJson","featureTableBinary","getGlobalProperty","GL","FLOAT"],"sources":["../../../../src/lib/parsers/parse-3d-tile-batched-model.ts"],"sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {GL} from '@loaders.gl/math'; // math.gl/geometry;\nimport Tile3DFeatureTable from '../classes/tile-3d-feature-table';\n// import Tile3DBatchTable from '../classes/tile-3d-batch-table';\n\nimport {parse3DTileHeaderSync} from './helpers/parse-3d-tile-header';\nimport {parse3DTileTablesHeaderSync, parse3DTileTablesSync} from './helpers/parse-3d-tile-tables';\nimport {parse3DTileGLTFViewSync, extractGLTF, GLTF_FORMAT} from './helpers/parse-3d-tile-gltf-view';\n\nexport async function parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parseBatchedModel(tile, arrayBuffer, byteOffset, options, context);\n  await extractGLTF(tile, GLTF_FORMAT.EMBEDDED, options, context);\n\n  const extensions = tile?.gltf?.extensions;\n  if (extensions && extensions.CESIUM_RTC) {\n    tile.rtcCenter = extensions.CESIUM_RTC.center;\n  }\n\n  return byteOffset;\n}\n\nfunction parseBatchedModel(tile, arrayBuffer, byteOffset, options, context) {\n  byteOffset = parse3DTileHeaderSync(tile, arrayBuffer, byteOffset);\n\n  byteOffset = parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset);\n  byteOffset = parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options);\n\n  byteOffset = parse3DTileGLTFViewSync(tile, arrayBuffer, byteOffset, options);\n\n  const featureTable = new Tile3DFeatureTable(tile.featureTableJson, tile.featureTableBinary);\n  tile.rtcCenter = featureTable.getGlobalProperty('RTC_CENTER', GL.FLOAT, 3);\n\n  return byteOffset;\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,mBAAA,GAAAC,sBAAA,CAAAF,OAAA;AAGA,IAAAG,kBAAA,GAAAH,OAAA;AACA,IAAAI,kBAAA,GAAAJ,OAAA;AACA,IAAAK,oBAAA,GAAAL,OAAA;AAEO,eAAeM,uBAAuBA,CAACC,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAAA,IAAAC,UAAA;EAC7FH,UAAU,GAAGI,iBAAiB,CAACN,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,CAAC;EAC/E,MAAM,IAAAG,gCAAW,EAACP,IAAI,EAAEQ,gCAAW,CAACC,QAAQ,EAAEN,OAAO,EAAEC,OAAO,CAAC;EAE/D,MAAMM,UAAU,GAAGV,IAAI,aAAJA,IAAI,wBAAAK,UAAA,GAAJL,IAAI,CAAEW,IAAI,cAAAN,UAAA,uBAAVA,UAAA,CAAYK,UAAU;EACzC,IAAIA,UAAU,IAAIA,UAAU,CAACE,UAAU,EAAE;IACvCZ,IAAI,CAACa,SAAS,GAAGH,UAAU,CAACE,UAAU,CAACE,MAAM;EAC/C;EAEA,OAAOZ,UAAU;AACnB;AAEA,SAASI,iBAAiBA,CAACN,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC1EF,UAAU,GAAG,IAAAa,wCAAqB,EAACf,IAAI,EAAEC,WAAW,EAAEC,UAAU,CAAC;EAEjEA,UAAU,GAAG,IAAAc,8CAA2B,EAAChB,IAAI,EAAEC,WAAW,EAAEC,UAAU,CAAC;EACvEA,UAAU,GAAG,IAAAe,wCAAqB,EAACjB,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,CAAC;EAE1ED,UAAU,GAAG,IAAAgB,4CAAuB,EAAClB,IAAI,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,CAAC;EAE5E,MAAMgB,YAAY,GAAG,IAAIC,2BAAkB,CAACpB,IAAI,CAACqB,gBAAgB,EAAErB,IAAI,CAACsB,kBAAkB,CAAC;EAC3FtB,IAAI,CAACa,SAAS,GAAGM,YAAY,CAACI,iBAAiB,CAAC,YAAY,EAAEC,QAAE,CAACC,KAAK,EAAE,CAAC,CAAC;EAE1E,OAAOvB,UAAU;AACnB"}