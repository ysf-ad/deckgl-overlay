{"version":3,"file":"index.js","names":["_parseQuantizedMesh","_interopRequireDefault","require","_parseTerrain","_terrainLoader","_quantizedMeshLoader","TerrainLoader","TerrainWorkerLoader","parse","loadTerrain","exports","_typecheckTerrainLoader","QuantizedMeshLoader","QuantizedMeshWorkerLoader","parseSync","parseQuantizedMesh","arrayBuffer","options","_typecheckQuantizedMeshLoader"],"sources":["../../src/index.ts"],"sourcesContent":["import type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport parseQuantizedMesh from './lib/parse-quantized-mesh';\nimport loadTerrain from './lib/parse-terrain';\n\nimport {TerrainLoader as TerrainWorkerLoader} from './terrain-loader';\nimport {QuantizedMeshLoader as QuantizedMeshWorkerLoader} from './quantized-mesh-loader';\n\n// TerrainLoader\n\nexport {TerrainWorkerLoader};\n\nexport const TerrainLoader = {\n  ...TerrainWorkerLoader,\n  parse: loadTerrain\n};\n\nexport const _typecheckTerrainLoader: LoaderWithParser = TerrainLoader; // eslint-disable-line\n\n// QuantizedMeshLoader\n\nexport {QuantizedMeshWorkerLoader};\n\n/**\n * Loader for quantized meshes\n */\nexport const QuantizedMeshLoader = {\n  ...QuantizedMeshWorkerLoader,\n  parseSync: parseQuantizedMesh,\n  parse: async (arrayBuffer, options) => parseQuantizedMesh(arrayBuffer, options)\n};\n\nexport const _typecheckQuantizedMeshLoader: LoaderWithParser = QuantizedMeshLoader;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA,IAAAA,mBAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEA,IAAAE,cAAA,GAAAF,OAAA;AACA,IAAAG,oBAAA,GAAAH,OAAA;AAMO,MAAMI,aAAa,GAAG;EAC3B,GAAGC,4BAAmB;EACtBC,KAAK,EAAEC;AACT,CAAC;AAACC,OAAA,CAAAJ,aAAA,GAAAA,aAAA;AAEK,MAAMK,uBAAyC,GAAGL,aAAa;AAACI,OAAA,CAAAC,uBAAA,GAAAA,uBAAA;AAShE,MAAMC,mBAAmB,GAAG;EACjC,GAAGC,wCAAyB;EAC5BC,SAAS,EAAEC,2BAAkB;EAC7BP,KAAK,EAAE,MAAAA,CAAOQ,WAAW,EAAEC,OAAO,KAAK,IAAAF,2BAAkB,EAACC,WAAW,EAAEC,OAAO;AAChF,CAAC;AAACP,OAAA,CAAAE,mBAAA,GAAAA,mBAAA;AAEK,MAAMM,6BAA+C,GAAGN,mBAAmB;AAACF,OAAA,CAAAQ,6BAAA,GAAAA,6BAAA"}