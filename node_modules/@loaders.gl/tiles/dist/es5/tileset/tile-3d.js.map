{"version":3,"file":"tile-3d.js","names":["_core","require","_culling","_core2","_constants","_boundingVolume","_tiles3dLod","_i3sLod","_dTilesOptions","_tilesetTraverser","scratchVector","Vector3","defined","x","undefined","Tile3D","constructor","tileset","header","parentHeader","extendedId","arguments","length","_defineProperty2","default","TILE_CONTENT_STATE","UNLOADED","Matrix4","TilesetTraverser","id","url","parent","refine","_getRefine","type","contentUrl","_initializeLodMetric","_initializeTransforms","_initializeBoundingVolumes","_initializeContent","_initializeRenderingState","Object","seal","destroy","isDestroyed","selected","_selectedFrame","_frameNumber","isVisible","_visible","isVisibleAndInRequestVolume","_inRequestVolume","hasRenderContent","hasEmptyContent","hasTilesetContent","hasChildren","children","contentReady","contentState","READY","contentAvailable","Boolean","_expiredContent","contentFailed","hasUnloadedContent","contentUnloaded","contentExpired","EXPIRED","FAILED","distanceToCamera","_distanceToCamera","screenSpaceError","_screenSpaceError","boundingBox","_boundingBox","getCartographicBounds","boundingVolume","getScreenSpaceError","frameState","useParentLodMetric","TILESET_TYPE","I3S","getProjectedRadius","TILES3D","getTiles3DScreenSpaceError","Error","unselect","_getGpuMemoryUsageInBytes","content","gpuMemoryUsageInBytes","byteLength","_getPriority","traverser","_traverser","skipLevelOfDetail","options","maySkipTile","TILE_REFINEMENT","ADD","_touchedFrame","useParentScreenSpaceError","rootScreenSpaceError","root","Math","max","loadContent","expired","_expireDate","LOADING","requestToken","_requestScheduler","scheduleRequest","bind","getTileUrl","loader","loadOptions","isTileset","_getLoaderSpecificOptions","load","contentLoader","_isTileset","_initializeTileHeaders","_onContentLoaded","error","done","unloadContent","updateVisibility","viewportIds","frameNumber","parentVisibilityPlaneMask","_visibilityPlaneMask","CullingVolume","MASK_INDETERMINATE","updateTransforms","parentTransform","computedTransform","modelMatrix","_updateTransform","distanceToTile","visibility","MASK_OUTSIDE","insideViewerRequestVolume","cullingVolume","computeVisibilityWithPlaneMask","contentVisibility","sqrt","distanceSquaredTo","camera","position","cameraSpaceZDepth","_ref","subVectors","center","direction","dot","viewerRequestVolume","_viewerRequestVolume","updateExpiration","now","Date","lessThan","extras","lodMetricType","console","warn","lodMetricValue","tileHeader","transform","clone","multiplyRight","parentInitialTransform","_initialTransform","_contentBoundingVolume","_updateBoundingVolume","_tileset","_tile","depth","level","_shouldRefine","_centerZDepth","_stackLength","_selectionDepth","_visitedFrame","_requestedFrame","_priority","REPLACE","indexOf","disableSkipLevelOfDetail","createBoundingVolume","didTransformChange","equals","loaderId","i3s","_tileOptions","attributeUrls","textureUrl","textureFormat","textureLoaderOptions","materialDefinition","isDracoGeometry","mbs","_tilesetOptions","store","attributeStorageInfo","fields","isTileHeader","get3dTilesOptions","exports"],"sources":["../../../src/tileset/tile-3d.ts"],"sourcesContent":["// loaders.gl, MIT license\n\n// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {Vector3, Matrix4} from '@math.gl/core';\nimport {CullingVolume} from '@math.gl/culling';\n\nimport {load} from '@loaders.gl/core';\n\n// Note: circular dependency\nimport type {Tileset3D} from './tileset-3d';\nimport type {DoublyLinkedListNode} from '../utils/doubly-linked-list-node';\nimport {TILE_REFINEMENT, TILE_CONTENT_STATE, TILESET_TYPE} from '../constants';\n\nimport {FrameState} from './helpers/frame-state';\nimport {\n  createBoundingVolume,\n  getCartographicBounds,\n  CartographicBounds\n} from './helpers/bounding-volume';\nimport {getTiles3DScreenSpaceError} from './helpers/tiles-3d-lod';\nimport {getProjectedRadius} from './helpers/i3s-lod';\nimport {get3dTilesOptions} from './helpers/3d-tiles-options';\nimport {TilesetTraverser} from './tileset-traverser';\n\nconst scratchVector = new Vector3();\n\nfunction defined(x) {\n  return x !== undefined && x !== null;\n}\n\n/**\n * @param tileset - Tileset3D instance\n * @param header - tile header - JSON loaded from a dataset\n * @param parentHeader - parent Tile3D instance\n * @param extendedId - optional ID to separate copies of a tile for different viewports.\n *                              const extendedId = `${tile.id}-${frameState.viewport.id}`;\n */\nexport type Tile3DProps = {\n  tileset: Tileset3D;\n  header: Object;\n  parentHeader: Tile3D;\n  extendedId: string;\n};\n\n/**\n * A Tile3DHeader represents a tile as Tileset3D. When a tile is first created, its content is not loaded;\n * the content is loaded on-demand when needed based on the view.\n * Do not construct this directly, instead access tiles through {@link Tileset3D#tileVisible}.\n */\nexport class Tile3D {\n  tileset: Tileset3D;\n  header: any;\n  id: string;\n  url: string;\n  parent: Tile3D;\n  /* Specifies the type of refine that is used when traversing this tile for rendering. */\n  refine: number;\n  type: string;\n  contentUrl: string;\n  /** Different refinement algorithms used by I3S and 3D tiles */\n  lodMetricType: 'geometricError' | 'maxScreenThreshold' = 'geometricError';\n  /** The error, in meters, introduced if this tile is rendered and its children are not. */\n  lodMetricValue: number = 0;\n\n  /** @todo math.gl is not exporting BoundingVolume base type? */\n  boundingVolume: any = null;\n\n  /**\n   * The tile's content.  This represents the actual tile's payload,\n   * not the content's metadata in the tileset JSON file.\n   */\n  content: any = null;\n  contentState: number = TILE_CONTENT_STATE.UNLOADED;\n  gpuMemoryUsageInBytes: number = 0;\n\n  /** The tile's children - an array of Tile3D objects. */\n  children: Tile3D[] = [];\n  depth: number = 0;\n  viewportIds: any[] = [];\n  transform = new Matrix4();\n  extensions: any = null;\n  /** TODO Cesium 3d tiles specific */\n  implicitTiling?: any = null;\n\n  /** Container to store application specific data */\n  userData: Record<string, any> = {};\n\n  computedTransform: any;\n  hasEmptyContent: boolean = false;\n  hasTilesetContent: boolean = false;\n\n  traverser = new TilesetTraverser({});\n\n  /** Used by TilesetCache */\n  _cacheNode: DoublyLinkedListNode | null = null;\n\n  private _frameNumber: any = null;\n\n  // TODO Cesium 3d tiles specific\n  private _expireDate: any = null;\n  private _expiredContent: any = null;\n\n  private _boundingBox?: CartographicBounds;\n\n  /** updated every frame for tree traversal and rendering optimizations: */\n  public _distanceToCamera: number = 0;\n  _screenSpaceError: number = 0;\n  private _visibilityPlaneMask: any;\n  private _visible: boolean | undefined = undefined;\n\n  private _contentBoundingVolume: any;\n  private _viewerRequestVolume: any;\n\n  _initialTransform: Matrix4 = new Matrix4();\n\n  // Used by traverser, cannot be marked private\n  _priority: number = 0;\n  _selectedFrame: number = 0;\n  _requestedFrame: number = 0;\n  _selectionDepth: number = 0;\n  _touchedFrame: number = 0;\n  _centerZDepth: number = 0;\n  _shouldRefine: boolean = false;\n  _stackLength: number = 0;\n  _visitedFrame: number = 0;\n  _inRequestVolume: boolean = false;\n  _lodJudge: any = null; // TODO i3s specific, needs to remove\n\n  /**\n   * @constructs\n   * Create a Tile3D instance\n   * @param tileset - Tileset3D instance\n   * @param header - tile header - JSON loaded from a dataset\n   * @param parentHeader - parent Tile3D instance\n   * @param extendedId - optional ID to separate copies of a tile for different viewports.\n   *    const extendedId = `${tile.id}-${frameState.viewport.id}`;\n   */\n  // eslint-disable-next-line max-statements\n  constructor(\n    tileset: Tileset3D,\n    header: {[key: string]: any},\n    parentHeader?: Tile3D,\n    extendedId = ''\n  ) {\n    // PUBLIC MEMBERS\n    // original tile data\n    this.header = header;\n\n    // The tileset containing this tile.\n    this.tileset = tileset;\n    this.id = extendedId || header.id;\n    this.url = header.url;\n\n    // This tile's parent or `undefined` if this tile is the root.\n    // @ts-ignore\n    this.parent = parentHeader;\n    this.refine = this._getRefine(header.refine);\n    this.type = header.type;\n    this.contentUrl = header.contentUrl;\n\n    this._initializeLodMetric(header);\n    this._initializeTransforms(header);\n    this._initializeBoundingVolumes(header);\n    this._initializeContent(header);\n    this._initializeRenderingState(header);\n\n    Object.seal(this);\n  }\n\n  destroy() {\n    this.header = null;\n  }\n\n  isDestroyed() {\n    return this.header === null;\n  }\n\n  get selected() {\n    return this._selectedFrame === this.tileset._frameNumber;\n  }\n\n  get isVisible() {\n    return this._visible;\n  }\n\n  get isVisibleAndInRequestVolume() {\n    return this._visible && this._inRequestVolume;\n  }\n\n  /** Returns true if tile is not an empty tile and not an external tileset */\n  get hasRenderContent() {\n    return !this.hasEmptyContent && !this.hasTilesetContent;\n  }\n\n  /** Returns true if tile has children */\n  get hasChildren() {\n    return this.children.length > 0 || (this.header.children && this.header.children.length > 0);\n  }\n\n  /**\n   * Determines if the tile's content is ready. This is automatically `true` for\n   * tiles with empty content.\n   */\n  get contentReady() {\n    return this.contentState === TILE_CONTENT_STATE.READY || this.hasEmptyContent;\n  }\n\n  /**\n   * Determines if the tile has available content to render.  `true` if the tile's\n   * content is ready or if it has expired content this renders while new content loads; otherwise,\n   */\n  get contentAvailable() {\n    return Boolean(\n      (this.contentReady && this.hasRenderContent) || (this._expiredContent && !this.contentFailed)\n    );\n  }\n\n  /** Returns true if tile has renderable content but it's unloaded */\n  get hasUnloadedContent() {\n    return this.hasRenderContent && this.contentUnloaded;\n  }\n\n  /**\n   * Determines if the tile's content has not be requested. `true` if tile's\n   * content has not be requested; otherwise, `false`.\n   */\n  get contentUnloaded() {\n    return this.contentState === TILE_CONTENT_STATE.UNLOADED;\n  }\n\n  /**\n   * Determines if the tile's content is expired. `true` if tile's\n   * content is expired; otherwise, `false`.\n   */\n  get contentExpired() {\n    return this.contentState === TILE_CONTENT_STATE.EXPIRED;\n  }\n\n  // Determines if the tile's content failed to load.  `true` if the tile's\n  // content failed to load; otherwise, `false`.\n  get contentFailed() {\n    return this.contentState === TILE_CONTENT_STATE.FAILED;\n  }\n\n  /**\n   * Distance from the tile's bounding volume center to the camera\n   */\n  get distanceToCamera(): number {\n    return this._distanceToCamera;\n  }\n\n  /**\n   * Screen space error for LOD selection\n   */\n  get screenSpaceError(): number {\n    return this._screenSpaceError;\n  }\n\n  /**\n   * Get bounding box in cartographic coordinates\n   * @returns [min, max] each in [longitude, latitude, altitude]\n   */\n  get boundingBox(): CartographicBounds {\n    if (!this._boundingBox) {\n      this._boundingBox = getCartographicBounds(this.header.boundingVolume, this.boundingVolume);\n    }\n    return this._boundingBox;\n  }\n\n  /** Get the tile's screen space error. */\n  getScreenSpaceError(frameState, useParentLodMetric) {\n    switch (this.tileset.type) {\n      case TILESET_TYPE.I3S:\n        return getProjectedRadius(this, frameState);\n      case TILESET_TYPE.TILES3D:\n        return getTiles3DScreenSpaceError(this, frameState, useParentLodMetric);\n      default:\n        // eslint-disable-next-line\n        throw new Error('Unsupported tileset type');\n    }\n  }\n\n  /**\n   * Make tile unselected than means it won't be shown\n   * but it can be still loaded in memory\n   */\n  unselect(): void {\n    this._selectedFrame = 0;\n  }\n\n  /**\n   * Memory usage of tile on GPU\n   */\n  _getGpuMemoryUsageInBytes(): number {\n    return this.content.gpuMemoryUsageInBytes || this.content.byteLength || 0;\n  }\n\n  /*\n   * If skipLevelOfDetail is off try to load child tiles as soon as possible so that their parent can refine sooner.\n   * Tiles are prioritized by screen space error.\n   */\n  // eslint-disable-next-line complexity\n  _getPriority() {\n    const traverser = this.tileset._traverser;\n    const {skipLevelOfDetail} = traverser.options;\n\n    /*\n     * Tiles that are outside of the camera's frustum could be skipped if we are in 'ADD' mode\n     * or if we are using 'Skip Traversal' in 'REPLACE' mode.\n     * Otherewise, all 'touched' child tiles have to be loaded and displayed,\n     * this may include tiles that are outide of the camera frustum (so that we can hide the parent tile).\n     */\n    const maySkipTile = this.refine === TILE_REFINEMENT.ADD || skipLevelOfDetail;\n\n    // Check if any reason to abort\n    if (maySkipTile && !this.isVisible && this._visible !== undefined) {\n      return -1;\n    }\n    // Condition used in `cancelOutOfViewRequests` function in CesiumJS/Cesium3DTileset.js\n    if (this.tileset._frameNumber - this._touchedFrame >= 1) {\n      return -1;\n    }\n    if (this.contentState === TILE_CONTENT_STATE.UNLOADED) {\n      return -1;\n    }\n\n    // Based on the priority function `getPriorityReverseScreenSpaceError` in CesiumJS. Scheduling priority is based on the parent's screen space error when possible.\n    const parent = this.parent;\n    const useParentScreenSpaceError =\n      parent && (!maySkipTile || this._screenSpaceError === 0.0 || parent.hasTilesetContent);\n    const screenSpaceError = useParentScreenSpaceError\n      ? parent._screenSpaceError\n      : this._screenSpaceError;\n\n    const rootScreenSpaceError = traverser.root ? traverser.root._screenSpaceError : 0.0;\n\n    // Map higher SSE to lower values (e.g. root tile is highest priority)\n    return Math.max(rootScreenSpaceError - screenSpaceError, 0);\n  }\n\n  /**\n   *  Requests the tile's content.\n   * The request may not be made if the Request Scheduler can't prioritize it.\n   */\n  // eslint-disable-next-line max-statements, complexity\n  async loadContent(): Promise<boolean> {\n    if (this.hasEmptyContent) {\n      return false;\n    }\n\n    if (this.content) {\n      return true;\n    }\n\n    const expired = this.contentExpired;\n\n    if (expired) {\n      this._expireDate = null;\n    }\n\n    this.contentState = TILE_CONTENT_STATE.LOADING;\n\n    const requestToken = await this.tileset._requestScheduler.scheduleRequest(\n      this.id,\n      this._getPriority.bind(this)\n    );\n\n    if (!requestToken) {\n      // cancelled\n      this.contentState = TILE_CONTENT_STATE.UNLOADED;\n      return false;\n    }\n\n    try {\n      const contentUrl = this.tileset.getTileUrl(this.contentUrl);\n      // The content can be a binary tile ot a JSON tileset\n      const loader = this.tileset.loader;\n      const options = {\n        ...this.tileset.loadOptions,\n        [loader.id]: {\n          // @ts-expect-error\n          ...this.tileset.loadOptions[loader.id],\n          isTileset: this.type === 'json',\n          ...this._getLoaderSpecificOptions(loader.id)\n        }\n      };\n\n      this.content = await load(contentUrl, loader, options);\n\n      if (this.tileset.options.contentLoader) {\n        await this.tileset.options.contentLoader(this);\n      }\n\n      if (this._isTileset()) {\n        // Add tile headers for the nested tilset's subtree\n        // Async update of the tree should be fine since there would never be edits to the same node\n        // TODO - we need to capture the child tileset's URL\n        this.tileset._initializeTileHeaders(this.content, this);\n      }\n\n      this.contentState = TILE_CONTENT_STATE.READY;\n      this._onContentLoaded();\n      return true;\n    } catch (error) {\n      // Tile is unloaded before the content finishes loading\n      this.contentState = TILE_CONTENT_STATE.FAILED;\n      throw error;\n    } finally {\n      requestToken.done();\n    }\n  }\n\n  // Unloads the tile's content.\n  unloadContent() {\n    if (this.content && this.content.destroy) {\n      this.content.destroy();\n    }\n    this.content = null;\n    if (this.header.content && this.header.content.destroy) {\n      this.header.content.destroy();\n    }\n    this.header.content = null;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n    return true;\n  }\n\n  /**\n   * Update the tile's visibility\n   * @param {Object} frameState - frame state for tile culling\n   * @param {string[]} viewportIds - a list of viewport ids that show this tile\n   * @return {void}\n   */\n  updateVisibility(frameState, viewportIds) {\n    if (this._frameNumber === frameState.frameNumber) {\n      // Return early if visibility has already been checked during the traversal.\n      // The visibility may have already been checked if the cullWithChildrenBounds optimization is used.\n      return;\n    }\n\n    const parent = this.parent;\n    const parentVisibilityPlaneMask = parent\n      ? parent._visibilityPlaneMask\n      : CullingVolume.MASK_INDETERMINATE;\n\n    if (this.tileset._traverser.options.updateTransforms) {\n      const parentTransform = parent ? parent.computedTransform : this.tileset.modelMatrix;\n      this._updateTransform(parentTransform);\n    }\n\n    this._distanceToCamera = this.distanceToTile(frameState);\n    this._screenSpaceError = this.getScreenSpaceError(frameState, false);\n    this._visibilityPlaneMask = this.visibility(frameState, parentVisibilityPlaneMask); // Use parent's plane mask to speed up visibility test\n    this._visible = this._visibilityPlaneMask !== CullingVolume.MASK_OUTSIDE;\n    this._inRequestVolume = this.insideViewerRequestVolume(frameState);\n\n    this._frameNumber = frameState.frameNumber;\n    this.viewportIds = viewportIds;\n  }\n\n  // Determines whether the tile's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @param {Number} parentVisibilityPlaneMask The parent's plane mask to speed up the visibility check.\n  // @returns {Number} A plane mask as described above in {@link CullingVolume#computeVisibilityWithPlaneMask}.\n  visibility(frameState, parentVisibilityPlaneMask) {\n    const {cullingVolume} = frameState;\n    const {boundingVolume} = this;\n\n    // TODO Cesium specific - restore clippingPlanes\n    // const {clippingPlanes, clippingPlanesOriginMatrix} = tileset;\n    // if (clippingPlanes && clippingPlanes.enabled) {\n    //   const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n    //     boundingVolume,\n    //     clippingPlanesOriginMatrix\n    //   );\n    //   this._isClipped = intersection !== Intersect.INSIDE;\n    //   if (intersection === Intersect.OUTSIDE) {\n    //     return CullingVolume.MASK_OUTSIDE;\n    //   }\n    // }\n\n    // return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n    return cullingVolume.computeVisibilityWithPlaneMask(boundingVolume, parentVisibilityPlaneMask);\n  }\n\n  // Assuming the tile's bounding volume intersects the culling volume, determines\n  // whether the tile's content's bounding volume intersects the culling volume.\n  // @param {FrameState} frameState The frame state.\n  // @returns {Intersect} The result of the intersection: the tile's content is completely outside, completely inside, or intersecting the culling volume.\n  contentVisibility() {\n    return true;\n\n    // TODO restore\n    /*\n    // Assumes the tile's bounding volume intersects the culling volume already, so\n    // just return Intersect.INSIDE if there is no content bounding volume.\n    if (!defined(this.contentBoundingVolume)) {\n      return Intersect.INSIDE;\n    }\n\n    if (this._visibilityPlaneMask === CullingVolume.MASK_INSIDE) {\n      // The tile's bounding volume is completely inside the culling volume so\n      // the content bounding volume must also be inside.\n      return Intersect.INSIDE;\n    }\n\n    // PERFORMANCE_IDEA: is it possible to burn less CPU on this test since we know the\n    // tile's (not the content's) bounding volume intersects the culling volume?\n    const cullingVolume = frameState.cullingVolume;\n    const boundingVolume = tile.contentBoundingVolume;\n\n    const tileset = this.tileset;\n    const clippingPlanes = tileset.clippingPlanes;\n    if (defined(clippingPlanes) && clippingPlanes.enabled) {\n      const intersection = clippingPlanes.computeIntersectionWithBoundingVolume(\n        boundingVolume,\n        tileset.clippingPlanesOriginMatrix\n      );\n      this._isClipped = intersection !== Intersect.INSIDE;\n      if (intersection === Intersect.OUTSIDE) {\n        return Intersect.OUTSIDE;\n      }\n    }\n\n    return cullingVolume.computeVisibility(boundingVolume);\n    */\n  }\n\n  /**\n   * Computes the (potentially approximate) distance from the closest point of the tile's bounding volume to the camera.\n   * @param frameState The frame state.\n   * @returns {Number} The distance, in meters, or zero if the camera is inside the bounding volume.\n   */\n  distanceToTile(frameState: FrameState): number {\n    const boundingVolume = this.boundingVolume;\n    return Math.sqrt(Math.max(boundingVolume.distanceSquaredTo(frameState.camera.position), 0));\n  }\n\n  /**\n   * Computes the tile's camera-space z-depth.\n   * @param frameState The frame state.\n   * @returns The distance, in meters.\n   */\n  cameraSpaceZDepth({camera}): number {\n    const boundingVolume = this.boundingVolume; // Gets the underlying OrientedBoundingBox or BoundingSphere\n    scratchVector.subVectors(boundingVolume.center, camera.position);\n    return camera.direction.dot(scratchVector);\n  }\n\n  /**\n   * Checks if the camera is inside the viewer request volume.\n   * @param {FrameState} frameState The frame state.\n   * @returns {Boolean} Whether the camera is inside the volume.\n   */\n  insideViewerRequestVolume(frameState: FrameState) {\n    const viewerRequestVolume = this._viewerRequestVolume;\n    return (\n      !viewerRequestVolume || viewerRequestVolume.distanceSquaredTo(frameState.camera.position) <= 0\n    );\n  }\n\n  // TODO Cesium specific\n\n  // Update whether the tile has expired.\n  updateExpiration() {\n    if (defined(this._expireDate) && this.contentReady && !this.hasEmptyContent) {\n      const now = Date.now();\n      // @ts-ignore Date.lessThan - replace with ms compare?\n      if (Date.lessThan(this._expireDate, now)) {\n        this.contentState = TILE_CONTENT_STATE.EXPIRED;\n        this._expiredContent = this.content;\n      }\n    }\n  }\n\n  get extras() {\n    return this.header.extras;\n  }\n\n  // INTERNAL METHODS\n\n  _initializeLodMetric(header) {\n    if ('lodMetricType' in header) {\n      this.lodMetricType = header.lodMetricType;\n    } else {\n      this.lodMetricType = (this.parent && this.parent.lodMetricType) || this.tileset.lodMetricType;\n      // eslint-disable-next-line\n      console.warn(`3D Tile: Required prop lodMetricType is undefined. Using parent lodMetricType`);\n    }\n\n    // This is used to compute screen space error, i.e., the error measured in pixels.\n    if ('lodMetricValue' in header) {\n      this.lodMetricValue = header.lodMetricValue;\n    } else {\n      this.lodMetricValue =\n        (this.parent && this.parent.lodMetricValue) || this.tileset.lodMetricValue;\n      // eslint-disable-next-line\n      console.warn(\n        '3D Tile: Required prop lodMetricValue is undefined. Using parent lodMetricValue'\n      );\n    }\n  }\n\n  _initializeTransforms(tileHeader) {\n    // The local transform of this tile.\n    this.transform = tileHeader.transform ? new Matrix4(tileHeader.transform) : new Matrix4();\n\n    const parent = this.parent;\n    const tileset = this.tileset;\n\n    const parentTransform =\n      parent && parent.computedTransform\n        ? parent.computedTransform.clone()\n        : tileset.modelMatrix.clone();\n    this.computedTransform = new Matrix4(parentTransform).multiplyRight(this.transform);\n\n    const parentInitialTransform =\n      parent && parent._initialTransform ? parent._initialTransform.clone() : new Matrix4();\n    this._initialTransform = new Matrix4(parentInitialTransform).multiplyRight(this.transform);\n  }\n\n  _initializeBoundingVolumes(tileHeader) {\n    this._contentBoundingVolume = null;\n    this._viewerRequestVolume = null;\n\n    this._updateBoundingVolume(tileHeader);\n  }\n\n  _initializeContent(tileHeader) {\n    // Empty tile by default\n    this.content = {_tileset: this.tileset, _tile: this};\n    this.hasEmptyContent = true;\n    this.contentState = TILE_CONTENT_STATE.UNLOADED;\n\n    // When `true`, the tile's content points to an external tileset.\n    // This is `false` until the tile's content is loaded.\n    this.hasTilesetContent = false;\n\n    if (tileHeader.contentUrl) {\n      this.content = null;\n      this.hasEmptyContent = false;\n    }\n  }\n\n  // TODO - remove anything not related to basic visibility detection\n  _initializeRenderingState(header) {\n    this.depth = header.level || (this.parent ? this.parent.depth + 1 : 0);\n    this._shouldRefine = false;\n\n    // Members this are updated every frame for tree traversal and rendering optimizations:\n    this._distanceToCamera = 0;\n    this._centerZDepth = 0;\n    this._screenSpaceError = 0;\n    this._visibilityPlaneMask = CullingVolume.MASK_INDETERMINATE;\n    this._visible = undefined;\n    this._inRequestVolume = false;\n\n    this._stackLength = 0;\n    this._selectionDepth = 0;\n\n    this._frameNumber = 0;\n    this._touchedFrame = 0;\n    this._visitedFrame = 0;\n    this._selectedFrame = 0;\n    this._requestedFrame = 0;\n\n    this._priority = 0.0;\n  }\n\n  _getRefine(refine) {\n    // Inherit from parent tile if omitted.\n    return refine || (this.parent && this.parent.refine) || TILE_REFINEMENT.REPLACE;\n  }\n\n  _isTileset() {\n    return this.contentUrl.indexOf('.json') !== -1;\n  }\n\n  _onContentLoaded() {\n    // Vector and Geometry tile rendering do not support the skip LOD optimization.\n    switch (this.content && this.content.type) {\n      case 'vctr':\n      case 'geom':\n        // @ts-ignore\n        this.tileset._traverser.disableSkipLevelOfDetail = true;\n        break;\n      default:\n    }\n\n    // The content may be tileset json\n    if (this._isTileset()) {\n      this.hasTilesetContent = true;\n    } else {\n      this.gpuMemoryUsageInBytes = this._getGpuMemoryUsageInBytes();\n    }\n  }\n\n  _updateBoundingVolume(header) {\n    // Update the bounding volumes\n    this.boundingVolume = createBoundingVolume(\n      header.boundingVolume,\n      this.computedTransform,\n      this.boundingVolume\n    );\n\n    const content = header.content;\n    if (!content) {\n      return;\n    }\n\n    // TODO Cesium specific\n    // Non-leaf tiles may have a content bounding-volume, which is a tight-fit bounding volume\n    // around only the features in the tile. This box is useful for culling for rendering,\n    // but not for culling for traversing the tree since it does not guarantee spatial coherence, i.e.,\n    // since it only bounds features in the tile, not the entire tile, children may be\n    // outside of this box.\n    if (content.boundingVolume) {\n      this._contentBoundingVolume = createBoundingVolume(\n        content.boundingVolume,\n        this.computedTransform,\n        this._contentBoundingVolume\n      );\n    }\n    if (header.viewerRequestVolume) {\n      this._viewerRequestVolume = createBoundingVolume(\n        header.viewerRequestVolume,\n        this.computedTransform,\n        this._viewerRequestVolume\n      );\n    }\n  }\n\n  // Update the tile's transform. The transform is applied to the tile's bounding volumes.\n  _updateTransform(parentTransform = new Matrix4()) {\n    const computedTransform = parentTransform.clone().multiplyRight(this.transform);\n    const didTransformChange = !computedTransform.equals(this.computedTransform);\n\n    if (!didTransformChange) {\n      return;\n    }\n\n    this.computedTransform = computedTransform;\n\n    this._updateBoundingVolume(this.header);\n  }\n\n  // Get options which are applicable only for the particular loader\n  _getLoaderSpecificOptions(loaderId) {\n    switch (loaderId) {\n      case 'i3s':\n        return {\n          ...this.tileset.options.i3s,\n          _tileOptions: {\n            attributeUrls: this.header.attributeUrls,\n            textureUrl: this.header.textureUrl,\n            textureFormat: this.header.textureFormat,\n            textureLoaderOptions: this.header.textureLoaderOptions,\n            materialDefinition: this.header.materialDefinition,\n            isDracoGeometry: this.header.isDracoGeometry,\n            mbs: this.header.mbs\n          },\n          _tilesetOptions: {\n            store: this.tileset.tileset.store,\n            attributeStorageInfo: this.tileset.tileset.attributeStorageInfo,\n            fields: this.tileset.tileset.fields\n          },\n          isTileHeader: false\n        };\n      case '3d-tiles':\n      case 'cesium-ion':\n      default:\n        return get3dTilesOptions(this.tileset.tileset);\n    }\n  }\n}\n"],"mappings":"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"}