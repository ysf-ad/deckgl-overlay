{"version":3,"file":"image-service.js","names":["_images","require","_imageSource","ImageService","ImageSource","constructor","props","getMetadata","Error","getImage","parameters","granularParameters","getGranularParameters","url","getURLFromTemplate","response","fetch","arrayBuffer","ImageLoader","parse","east","north","west","south","bbox","key","value","Object","entries","replace","concat","String","exports","_defineProperty2","default","toLowerCase","includes"],"sources":["../../../../../src/lib/services/generic/image-service.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport {LoaderOptions} from '@loaders.gl/loader-utils';\nimport type {ImageType} from '@loaders.gl/images';\nimport {ImageLoader} from '@loaders.gl/images';\n\nimport type {ImageSourceMetadata, GetImageParameters} from '../../sources/image-source';\nimport {ImageSource} from '../../sources/image-source';\n\n/** Template URL string should contain `${width}` etc which will be substituted. */\nexport type ImageServiceProps = {\n  /** Base URL to the service */\n  url: string;\n  /** Any load options to the loaders.gl Loaders used by the WMSService methods */\n  loadOptions?: LoaderOptions;\n};\n\n/**\n * Quickly connect to \"ad hoc\" image sources without subclassing ImageSource.\n * ImageSource allows template url strings to be used to ad hoc connect to arbitrary image data sources\n * Accepts a template url string and builds requests URLs\n */\nexport class ImageService<PropsT extends ImageServiceProps> extends ImageSource<PropsT> {\n  static type: 'template' = 'template';\n  static testURL = (url: string): boolean => url.toLowerCase().includes('{');\n\n  constructor(props: PropsT) {\n    super(props);\n  }\n\n  // IMAGE SOURCE API\n\n  async getMetadata(): Promise<ImageSourceMetadata> {\n    throw new Error('ImageSource.getMetadata not implemented');\n  }\n\n  async getImage(parameters: GetImageParameters): Promise<ImageType> {\n    const granularParameters = this.getGranularParameters(parameters);\n    const url = this.getURLFromTemplate(granularParameters);\n    const response = await this.fetch(url);\n    const arrayBuffer = await response.arrayBuffer();\n    return await ImageLoader.parse(arrayBuffer);\n  }\n\n  // HELPERS\n\n  /** Break up bounding box in east, north, south, west */\n  protected getGranularParameters(parameters: GetImageParameters): Record<string, unknown> {\n    const [east, north, west, south] = parameters.bbox;\n    return {...parameters, east, north, south, west};\n  }\n\n  /** Supports both ${} and {} notations */\n  protected getURLFromTemplate(parameters: Record<string, unknown>): string {\n    let url = this.props.url;\n    for (const [key, value] of Object.entries(parameters)) {\n      // TODO - parameter could be repeated\n      // const regex = new RegExp(`\\${${key}}`, 'g');\n      url = url.replace(`\\${${key}}`, String(value));\n      url = url.replace(`{${key}}`, String(value));\n    }\n    return url;\n  }\n}\n"],"mappings":";;;;;;;;AAIA,IAAAA,OAAA,GAAAC,OAAA;AAGA,IAAAC,YAAA,GAAAD,OAAA;AAeO,MAAME,YAAY,SAA2CC,wBAAW,CAAS;EAItFC,WAAWA,CAACC,KAAa,EAAE;IACzB,KAAK,CAACA,KAAK,CAAC;EACd;EAIA,MAAMC,WAAWA,CAAA,EAAiC;IAChD,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;EAC5D;EAEA,MAAMC,QAAQA,CAACC,UAA8B,EAAsB;IACjE,MAAMC,kBAAkB,GAAG,IAAI,CAACC,qBAAqB,CAACF,UAAU,CAAC;IACjE,MAAMG,GAAG,GAAG,IAAI,CAACC,kBAAkB,CAACH,kBAAkB,CAAC;IACvD,MAAMI,QAAQ,GAAG,MAAM,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC;IACtC,MAAMI,WAAW,GAAG,MAAMF,QAAQ,CAACE,WAAW,CAAC,CAAC;IAChD,OAAO,MAAMC,mBAAW,CAACC,KAAK,CAACF,WAAW,CAAC;EAC7C;EAKUL,qBAAqBA,CAACF,UAA8B,EAA2B;IACvF,MAAM,CAACU,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,CAAC,GAAGb,UAAU,CAACc,IAAI;IAClD,OAAO;MAAC,GAAGd,UAAU;MAAEU,IAAI;MAAEC,KAAK;MAAEE,KAAK;MAAED;IAAI,CAAC;EAClD;EAGUR,kBAAkBA,CAACJ,UAAmC,EAAU;IACxE,IAAIG,GAAG,GAAG,IAAI,CAACP,KAAK,CAACO,GAAG;IACxB,KAAK,MAAM,CAACY,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAAClB,UAAU,CAAC,EAAE;MAGrDG,GAAG,GAAGA,GAAG,CAACgB,OAAO,MAAAC,MAAA,CAAOL,GAAG,QAAKM,MAAM,CAACL,KAAK,CAAC,CAAC;MAC9Cb,GAAG,GAAGA,GAAG,CAACgB,OAAO,KAAAC,MAAA,CAAKL,GAAG,QAAKM,MAAM,CAACL,KAAK,CAAC,CAAC;IAC9C;IACA,OAAOb,GAAG;EACZ;AACF;AAACmB,OAAA,CAAA7B,YAAA,GAAAA,YAAA;AAAA,IAAA8B,gBAAA,CAAAC,OAAA,EAzCY/B,YAAY,UACG,UAAU;AAAA,IAAA8B,gBAAA,CAAAC,OAAA,EADzB/B,YAAY,aAELU,GAAW,IAAcA,GAAG,CAACsB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC"}