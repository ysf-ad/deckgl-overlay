"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageService = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _images = require("@loaders.gl/images");
var _imageSource = require("../../sources/image-source");
class ImageService extends _imageSource.ImageSource {
  constructor(props) {
    super(props);
  }
  async getMetadata() {
    throw new Error('ImageSource.getMetadata not implemented');
  }
  async getImage(parameters) {
    const granularParameters = this.getGranularParameters(parameters);
    const url = this.getURLFromTemplate(granularParameters);
    const response = await this.fetch(url);
    const arrayBuffer = await response.arrayBuffer();
    return await _images.ImageLoader.parse(arrayBuffer);
  }
  getGranularParameters(parameters) {
    const [east, north, west, south] = parameters.bbox;
    return {
      ...parameters,
      east,
      north,
      south,
      west
    };
  }
  getURLFromTemplate(parameters) {
    let url = this.props.url;
    for (const [key, value] of Object.entries(parameters)) {
      url = url.replace("${".concat(key, "}"), String(value));
      url = url.replace("{".concat(key, "}"), String(value));
    }
    return url;
  }
}
exports.ImageService = ImageService;
(0, _defineProperty2.default)(ImageService, "type", 'template');
(0, _defineProperty2.default)(ImageService, "testURL", url => url.toLowerCase().includes('{'));
//# sourceMappingURL=image-service.js.map