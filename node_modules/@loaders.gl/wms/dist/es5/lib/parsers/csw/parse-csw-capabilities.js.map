{"version":3,"file":"parse-csw-capabilities.js","names":["_xml","require","_parseExceptionReport","parseCSWCapabilities","text","options","parsedXML","XMLLoader","parseTextSync","xml","removeNSPrefix","uncapitalizeKeys","parseExceptionReport","xmlCapabilities","capabilities"],"sources":["../../../../../src/lib/parsers/csw/parse-csw-capabilities.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {XMLLoader} from '@loaders.gl/xml';\nimport {parseExceptionReport} from './parse-exception-report';\n\n// CSW:GetCapabilitiesResponse\n\n/** All capabilities of a CSW service - response to a CSW `GetCapabilities` data structure extracted from XML */\nexport type CSWCapabilities = {\n  serviceIdentification: {\n    title: string;\n    serviceTypeVersion: string;\n    serviceType: string;\n  };\n\n  serviceProvider: {\n    providerName: string;\n    providerSite: string;\n    serviceContact: {\n      individualName: string;\n      positionName: string;\n      contactInfo: {\n        address: {\n          administrativeArea: string;\n          city: string;\n          country: string;\n          deliveryPoint: string;\n          electronicMailAddress: string;\n          postalCode: string;\n        };\n        phone: {\n          voice: string;\n        };\n      };\n    };\n  };\n\n  operationsMetadata: {\n    GetCapabilities: any;\n    GetFeatureInfo: any;\n    GetTile: any;\n  };\n\n  contents: {\n    layers: {\n      abstract: string;\n      identifier: string;\n      title: string;\n      formats: string[];\n      styles: {\n        identifier: string;\n        isDefault: string;\n        title: string;\n        abstract?: string;\n      }[];\n      bounds: {\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n      };\n      tileMatrixSetLinks: {\n        tileMatrixSet: string;\n      }[];\n      tileMatrixSets: {\n        identifier: string;\n        matrixIds: {\n          identifier: string;\n          matrixHeight: number;\n          matrixWidth: number;\n          scaleDenominator: number;\n          tileWidth: number;\n          tileHeight: number;\n          topLeftCorner: {\n            lon: number;\n            lat: number;\n          };\n        }[];\n      };\n    }[];\n  };\n};\n\n/**\n * Parses a typed data structure from raw XML for `GetCapabilities` response\n * @note Error handlings is fairly weak\n */\nexport function parseCSWCapabilities(text: string, options?: XMLLoaderOptions): CSWCapabilities {\n  const parsedXML = XMLLoader.parseTextSync(text, {\n    ...options,\n    xml: {\n      ...options?.xml,\n      removeNSPrefix: true,\n      uncapitalizeKeys: true\n    }\n  });\n\n  parseExceptionReport(parsedXML);\n\n  const xmlCapabilities: any = parsedXML.capabilities || parsedXML;\n  return xmlCapabilities;\n}\n"],"mappings":";;;;;;AAGA,IAAAA,IAAA,GAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AAoFO,SAASE,oBAAoBA,CAACC,IAAY,EAAEC,OAA0B,EAAmB;EAC9F,MAAMC,SAAS,GAAGC,cAAS,CAACC,aAAa,CAACJ,IAAI,EAAE;IAC9C,GAAGC,OAAO;IACVI,GAAG,EAAE;MACH,IAAGJ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,GAAG;MACfC,cAAc,EAAE,IAAI;MACpBC,gBAAgB,EAAE;IACpB;EACF,CAAC,CAAC;EAEF,IAAAC,0CAAoB,EAACN,SAAS,CAAC;EAE/B,MAAMO,eAAoB,GAAGP,SAAS,CAACQ,YAAY,IAAIR,SAAS;EAChE,OAAOO,eAAe;AACxB"}