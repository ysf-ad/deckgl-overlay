{"version":3,"file":"wms-feature-info-loader.js","names":["_wmsCapabilitiesLoader","require","_parseWmsFeatures","WMSFeatureInfoLoader","WMSCapabilitiesLoader","id","name","parse","arrayBuffer","options","parseWMSFeatureInfo","TextDecoder","decode","parseTextSync","text","exports","_typecheckWMSFeatureInfoLoader"],"sources":["../../../src/wip/wms-feature-info-loader.ts"],"sourcesContent":["// loaders.gl, MIT license\n\nimport type {LoaderWithParser} from '@loaders.gl/loader-utils';\nimport type {XMLLoaderOptions} from '@loaders.gl/xml';\nimport {WMSCapabilitiesLoader} from '../wms-capabilities-loader';\n\nimport type {WMSFeatureInfo} from '../lib/parsers/wms/parse-wms-features';\nimport {parseWMSFeatureInfo} from '../lib/parsers/wms/parse-wms-features';\n\nexport {WMSFeatureInfo};\n\n/**\n * Loader for the response to the WMS GetFeatureInfo request\n */\nexport const WMSFeatureInfoLoader = {\n  ...WMSCapabilitiesLoader,\n\n  id: 'wms-feature-info',\n  name: 'WMS FeatureInfo',\n\n  parse: async (arrayBuffer: ArrayBuffer, options?: XMLLoaderOptions) =>\n    parseWMSFeatureInfo(new TextDecoder().decode(arrayBuffer), options),\n  parseTextSync: (text: string, options?: XMLLoaderOptions) => parseWMSFeatureInfo(text, options)\n};\n\nexport const _typecheckWMSFeatureInfoLoader: LoaderWithParser = WMSFeatureInfoLoader;\n"],"mappings":";;;;;;AAIA,IAAAA,sBAAA,GAAAC,OAAA;AAGA,IAAAC,iBAAA,GAAAD,OAAA;AAOO,MAAME,oBAAoB,GAAG;EAClC,GAAGC,4CAAqB;EAExBC,EAAE,EAAE,kBAAkB;EACtBC,IAAI,EAAE,iBAAiB;EAEvBC,KAAK,EAAE,MAAAA,CAAOC,WAAwB,EAAEC,OAA0B,KAChE,IAAAC,qCAAmB,EAAC,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACJ,WAAW,CAAC,EAAEC,OAAO,CAAC;EACrEI,aAAa,EAAEA,CAACC,IAAY,EAAEL,OAA0B,KAAK,IAAAC,qCAAmB,EAACI,IAAI,EAAEL,OAAO;AAChG,CAAC;AAACM,OAAA,CAAAZ,oBAAA,GAAAA,oBAAA;AAEK,MAAMa,8BAAgD,GAAGb,oBAAoB;AAACY,OAAA,CAAAC,8BAAA,GAAAA,8BAAA"}